{
  "nft": {
    "amount": {
      "content": "Add NFTs to your collection effortlessly - we provide multiple flexible options to suit your needs.",
      "csv": "Import CSV",
      "csvContent": "Upload a CSV file to efficiently bulk-add NFTs to your collection.",
      "endpoint": "Import from endpoint",
      "endpointContent": "Easily import NFTs via an endpoint.",
      "json": "Import JSON",
      "jsonContent": "Import a JSON file to quickly add NFTs to your collection.",
      "single": "Create one by one",
      "singleContent": "Create your NFTs one by one for full control over each asset.",
      "title": "Start by adding NFTs"
    },
    "chain": {
      "8": "ASTAR (Substrate)",
      "11": "Unique network",
      "81": "ASTAR SHIBUYA (Testnet)",
      "592": "ASTAR (Mainnet)",
      "1284": "MOONBEAM (Mainnet)",
      "1287": "MOONBASE (Testnet)"
    },
    "evmChain": {
      "1": "Ethereum (Mainnet)",
      "10": "Optimism (Mainnet)",
      "11": "Unique network",
      "81": "ASTAR SHIBUYA (Testnet)",
      "137": "Optimism (Mainnet)",
      "592": "ASTAR (Mainnet)",
      "1284": "MOONBEAM (Mainnet)",
      "1287": "MOONBASE (Testnet)",
      "8453": "Base (Mainnet)",
      "42161": "Arbitrum One (Mainnet)",
      "42220": "Celo (Mainnet)",
      "43113": "Avalanche Sepolia",
      "43114": "Avalanche (Mainnet)",
      "44787": "Celo (Testnet)",
      "80002": "Polygon Amoy (Testnet)",
      "84532": "Base sepolia (Testnet)",
      "421614": "Arbitrum One Sepolia (Testnet)",
      "11155420": "Optimism Sepolia (Testnet)",
      "11155111": "Sepolia (Testnet)"
    },
    "chainType": {
      "1": "SUBSTRATE",
      "2": "EVM"
    },
    "collection": {
      "addNew": "Add new collection",
      "addNewDesc": "Add info",
      "addNewValue": "Add new value",
      "addLogo": "Select logo",
      "address": "Collection address",
      "baseUri": "Base URI",
      "chainType": "Chain type",
      "contractAddress": "Contract address",
      "create": "Create NFT Collection",
      "createFirst": "Start creating NFTs",
      "createInfo": "",
      "createToDisplay": "Create website to display NFTs with",
      "data": "Collection data",
      "delete": "Delete collection",
      "deleteConfirm": "Are you sure that you want to delete selected collection?",
      "deploy": "Deploy collection",
      "deployInfo": "Deploy on Testnet to test the template before launching it in production in Mainnet.",
      "display": "Display NFT collection",
      "drop": "Mint scheduling, reservation and pricing",
      "dropInfo": "Decide when minting starts, set a price, and reserve NFTs if needed.",
      "dropPrice": "Mint price",
      "dropReserve": "Reserved",
      "dropStart": "Drop start",
      "edit": "Edit",
      "extension": "[extension]",
      "empty": "Create your first NFT collection",
      "emptyInfo": "Add it to your Web3 project",
      "emptyArchive": "NFT collections Archive",
      "emptyArchiveInfo": "There are currently no NFT collections in the Archive.",
      "environment": "Choose a chain",
      "environmentContent": "We recommend deploying on Testnet first to test your template before launching in production on Mainnet.",
      "enterData": "Enter collection data",
      "headline": "How does it work?",
      "info": "Launch your end-to-end decentralized NFT collection with one click. Create NFTs, deploy smart contract and host the collection website on Web3.",
      "maxSupply": "Max supply",
      "mint": "Mint",
      "minted": "Already minted",
      "mintNfts": "Mint NFTs",
      "name": "Collection name",
      "new": "New NFT collection",
      "numOfData": "Number of data",
      "preview": "NFT collection",
      "previewTab": "Collection preview",
      "revoke": "Burn",
      "setBaseUri": "Set base URI",
      "smartContract": "NFT Collection data",
      "symbol": "Symbol",
      "showWebsite": "Show website",
      "title": "Collection",
      "transfer": "Transfer ownership",
      "upload": "Deploy NFT collection",
      "uploadData": "Compose NFT",
      "uploadImages": "Load images",
      "uploadLogo": "Upload",
      "uploadMetadata": "Store NFT metadata",
      "uploadYourFirst": "Upload your first NFTs and start building your collection.",
      "uuid": "Collection UUID",
      "view": "Or, display them on your existing website",
      "websiteConnected": "NFT collection has been successfully connected to the Apillon website!",
      "burn": {
        "title": "Burn token",
        "info": "Are you sure, you want to burn your token?"
      },
      "created": {
        "bucket": "newly created bucket",
        "build": "Build NFT website",
        "explorer": "blockchain explorer",
        "goBack": "Go back to NFT Collection",
        "info": "To continue, fork one of the templates on GitHub and customize it as needed. Once ready, deploy it to Apillon hosting—manually or by importing your GitHub repo.",
        "or": "or see its contents in your",
        "title": "Display your NFTs on the internet",
        "view": "View the transaction on",
        "deploy": "Deploy NFT website"
      },
      "createStep": {
        "1": "Metadata",
        "2": "Smart Contract",
        "3": "Visuals",
        "4": "Review"
      },
      "deployed": {
        "info": "Images are deploying on IPFS. This may take a few minutes, but we'll notify you once it's done.",
        "next": "So what’s next?",
        "nextInfo": "Show your collection to the world by deploying the NFT store website.",
        "skip": "Skip deployment for now - Show me the NFT collection",
        "standalone": "Standalone Collection",
        "standaloneInfo": "Easily expand your collection to multiple marketplaces with Apillon.",
        "title": "Great, NFT Collection successfully created!"
      },
      "displayTypes": {
        "string": {
          "label": "String",
          "info": "Textual traits that show as text boxes"
        },
        "date": {
          "label": "Date",
          "info": "Date traits that show as date boxes"
        },
        "number": {
          "label": "Number",
          "info": "Numerical traits that show as number boxes"
        },
        "boost_number": {
          "label": "Boost number",
          "info": "Numerical traits that show as progress bars"
        },
        "boost_percentage": {
          "label": "Boost percentage",
          "info": "Numerical traits that show as circle progress bars"
        }
      },
      "instruction": {
        "behavior": "1 - Supply and behavior",
        "behaviorInfo": "Set the total number of NFTs in your collection or choose to keep it unlimited. Customize how your NFTs behave by enabling or disabling special features.",
        "drop": "3 - Mint scheduling, reservation and pricing",
        "dropInfo": "Decide when minting starts, set a price, and reserve NFTs if needed.",
        "royalties": "2 - Collection royalties",
        "royaltiesInfo": "Set up royalties to earn a percentage of every resale of your NFTs after minting. This percentage will be automatically deducted from transactions and sent to your designated wallet.",
        "smartContract": "Define the core details of your NFT collection. These details will be stored permanently on-chain.",
        "visuals": "Choose a cover and profile image to enhance your collection's appearance. It's optional - you can always add it later in settings."
      },
      "review": {
        "balance": "Your balance",
        "costs": "Costs details",
        "createCollection": "Create collection",
        "info": "Give your collection a final review before deploying it to the blockchain.",
        "nonRefundable": "I understand credits are non-refundable after creation.",
        "nftFiles": "NFT files",
        "title": "Almost there!",
        "totalCosts": "Total costs",
        "totalSpend": "Total spend"
      },
      "status": {
        "0": "CREATED",
        "1": "INITIATED",
        "2": "DEPLOYING",
        "3": "DEPLOYED",
        "4": "TRANSFERRED",
        "5": "FAILED"
      },
      "type": {
        "1": "Generic",
        "2": "Nestable"
      },
      "websiteDeploy": {
        "deploy": "Deploy NFT website",
        "plain_js": "Vanilla Javascript",
        "react": "React",
        "vue": "Vue",
        "success": "NFT website deploy successfully triggered"
      }
    },
    "deploy": {
      "collection": "Give it a minute or two while we prepare everything for you.",
      "deployingCollection": "Deploying to blockchain...",
      "creatingCollection": "Creating collection...",
      "deploying": "Creating your NFTs",
      "metadata": "Deploying metadata...",
      "nft": "Deploying NFTs",
      "single": "Deploy NFT metadata",
      "unique": "Deploy NFT collection"
    },
    "metadata": {
      "createMethod": "Start by adding NFTs",
      "createMethodInfo": "Add NFTs to your collection effortlessly - we provide multiple flexible options to suit your needs.",
      "currentStep": "Metadata deploy step",
      "deployTitle": "Metadata deploys",
      "infoCollectionBehavior": "Configure the behavior of your NFT collection. ",
      "infoCollectionName": "Define the name and symbol for your NFT collection.",
      "infoNew": "To ensure permanent access to your NFTs, you need to store their metadata and files on the web. \n\nWould you like to store your NFT metadata in decentralized way?",
      "lastError": "Last error",
      "no": "I already have it online",
      "proceedUpload": "Proceed to upload",
      "startFresh": "We see that you already have metadata on Apillon. Would you like to use it, or start fresh?",
      "title": "Prepare NFT metadata",
      "titleCollectionBehavior": "Behavior",
      "titleCollectionName": "Name your collection",
      "yes": "Yes, proceed",
      "deployStatus": {
        "1": "UPLOADING IMAGES TO IPFS",
        "2": "UPDATING JSONs",
        "3": "METADATA UPLOADED ON IPFS",
        "4": "PUBLISHED TO IPNS",
        "10": "METADATA SUCCESSFULLY PREPARED"
      },
      "dynamic": {
        "btn": "Create Dynamic NFT collection",
        "content": "If you plan to update or reveal metadata over time, after you’ve deployed the NFT Collection, this is your way to go. This solution uses IPNS records with data stored on IPFS.",
        "title": "Dynamic NFT collection"
      },
      "static": {
        "btn": "Create Static NFT collection",
        "content": "If you plan to create an NFT Collection and not make any post-deployment changes, a static collection is your jam. The data will be stored on IPFS.",
        "title": "Static NFT collection"
      }
    },
    "network": {
      "1": {
        "advantage": "",
        "content": [
          {
            "title": "Ethereum"
          }
        ]
      },
      "10": {
        "advantage": "",
        "content": [
          {
            "title": "OPTIMISM"
          }
        ]
      },
      "11": {
        "advantage": "Perfect for NFT projects needing advanced customization and native features.",
        "content": [
          {
            "purpose": "Purpose: Unique Network is a Polkadot parachain optimized specifically for NFTs and gaming applications.",
            "title": "Unique network",
            "benefits": [
              "<b>Specialized NFT Infrastructure:</b> Unique is designed solely for NFTs, offering specific tools and features that are fine-tuned for NFT minting and management.",
              "<b>Low-Cost and Eco-Friendly:</b> The network operates with lower transaction fees and a more energy-efficient consensus mechanism compared to Ethereum.",
              "<b>NFT Customization:</b> Developers have more granular control over NFT metadata, including complex logic such as dynamic NFTs that can evolve based on certain conditions.",
              "<b>Native Support for On-Chain Features:</b> Includes native support for fractional ownership, nested NFTs (NFTs containing other NFTs), and NFT marketplaces.",
              "<b>Cross-Chain Capabilities:</b> As a Polkadot parachain, Unique offers cross-chain functionality for NFTs, enabling them to be traded or utilized across different networks within the Polkadot ecosystem.",
              "<b>Developer-Friendly:</b> Unique provides a comprehensive set of SDKs, APIs, and ready-made NFT tools, reducing the complexity of developing NFT-based applications."
            ]
          },
          {
            "content": "Use case: Best suited for NFT-focused projects, particularly those that require advanced features like dynamic NFTs, fractional ownership, and low-cost minting."
          }
        ]
      },
      "81": {
        "advantage": "",
        "content": [
          {
            "title": "ASTAR SHIBUYA"
          }
        ]
      },
      "137": {
        "advantage": "",
        "content": [
          {
            "title": "Polygon"
          }
        ]
      },
      "592": {
        "advantage": "Ideal for multi-chain projects using EVM and WASM for advanced NFT minting.",
        "content": [
          {
            "title": "Astar Network",
            "purpose": "Purpose: Astar is a multi-chain dApp hub on Polkadot that supports Ethereum, WebAssembly, and Layer 2 solutions.",
            "benefits": [
              "<b>Multi-VM Support:</b> Astar supports both Ethereum Virtual Machine (EVM) and WebAssembly (WASM), providing flexibility for developers who prefer different environments for NFT minting.",
              "<b>Layer 2 Support:</b> Allows for scaling solutions through Layer 2 technology, reducing costs and increasing efficiency for NFT minting.",
              "<b>Cross-Chain Interoperability:</b> Like Moonbeam, Astar benefits from Polkadot's cross-chain capabilities, meaning NFTs minted on Astar can be transferred or interact with other Polkadot parachains.",
              "<b>Dapp Staking Mechanism:</b> Developers can stake Astar tokens to earn rewards, providing additional incentives for NFT projects deployed on Astar.",
              "<b>Growing Ecosystem:</b> Astar is becoming a dApp hub, meaning NFT projects can integrate with various decentralized applications."
            ]
          },
          {
            "content": " Suitable for projects looking to leverage multi-chain capabilities with the flexibility of EVM and WASM for more sophisticated NFT minting solutions."
          }
        ]
      },
      "1284": {
        "advantage": "Low-cost, Ethereum-compatible testnet for NFT and smart contract testing.",
        "content": [
          {
            "title": "Moonbeam (Mainnet)",
            "content": "Purpose: Moonbeam is a fully Ethereum-compatible smart contract platform on Polkadot, designed for cross-chain applications.",
            "benefits": [
              "<b>Ethereum Compatibility:</b> Full support for Ethereum smart contracts and tools (like OpenZeppelin, MetaMask), enabling developers to mint NFTs without learning new languages.",
              "<b>Cross-Chain Interoperability:</b> Through Polkadot’s relay chain, NFTs minted on Moonbeam can interact with other chains in the Polkadot ecosystem.",
              "<b>Low Gas Fees:</b> Gas fees on Moonbeam are significantly lower compared to Ethereum, making minting NFTs more cost-efficient.",
              "<b>Active DeFi and NFT Ecosystem:</b> Moonbeam's rapidly growing DeFi ecosystem also creates opportunities for NFTs to be used in decentralized finance.",
              "<b>Multi-chain Vision:</b> Moonbeam allows NFTs to be minted with the potential to interact with multiple blockchains through Polkadot’s cross-chain capabilities."
            ]
          },
          {
            "content": "Use case: Ideal for projects requiring full production deployment of Ethereum-based NFTs with cross-chain interactions."
          }
        ]
      },
      "1287": {
        "advantage": "Low-cost, Ethereum-compatible testnet for NFT and smart contract testing.",
        "content": [
          {
            "title": "MOONBASE (Moonbeam Testnet)",
            "content": "Purpose: Moonbase is the testnet for Moonbeam, designed for testing and experimentation.",
            "benefits": [
              "<b>Low Costs:</b> As a testnet, transaction fees are negligible, allowing for cost-effective testing of NFT minting processes.",
              "<b>Ethereum Compatibility:</b> Developers can test Ethereum-based smart contracts and NFTs in an environment that mirrors Ethereum’s functionality.",
              "<b>Web3 Compatible:</b> You can use Ethereum development tools like MetaMask, Remix, and Truffle.",
              "<b>Access to Full Moonbeam Ecosystem:</b> Provides the opportunity to test features before deploying them on Moonbeam, ensuring seamless migration of NFT minting solutions to the mainnet.",
              "<b>Free Tokens for Testing:</b> You can request tokens from a faucet, making testing free and accessible."
            ]
          },
          {
            "content": "Use case: Best suited for developers who want to test minting processes and smart contract deployment before moving to production."
          }
        ]
      },
      "8453": {
        "advantage": "",
        "content": [
          {
            "title": "Base"
          }
        ]
      },
      "23294": {
        "advantage": "",
        "content": [
          {
            "title": "Oasis Sapphire"
          }
        ]
      },
      "42161": {
        "advantage": "",
        "content": [
          {
            "title": "Arbitrum One"
          }
        ]
      },
      "42220": {
        "advantage": "",
        "content": [
          {
            "title": "Celo"
          }
        ]
      },
      "42262": {
        "advantage": "",
        "content": [
          {
            "title": "Oasis"
          }
        ]
      },
      "43113": {
        "advantage": "",
        "content": [
          {
            "title": "AVALANCHE FUJI"
          }
        ]
      },
      "43114": {
        "advantage": "",
        "content": [
          {
            "title": "AVALANCHE"
          }
        ]
      },
      "44787": {
        "advantage": "",
        "content": [
          {
            "title": "ALFAJORES"
          }
        ]
      },
      "80002": {
        "advantage": "",
        "content": [
          {
            "title": "Polygon Amoy"
          }
        ]
      },
      "84532": {
        "advantage": "",
        "content": [
          {
            "title": "Base sepolia"
          }
        ]
      },
      "421614": {
        "advantage": "",
        "content": [
          {
            "title": "Arbitrum One Sepolia"
          }
        ]
      },
      "11155111": {
        "advantage": "",
        "content": [
          {
            "title": "Sepolia"
          }
        ]
      },
      "11155420": {
        "advantage": "",
        "content": [
          {
            "title": "OPTIMISM Sepolia"
          }
        ]
      }
    },
    "single": {
      "boosts": "Boosts",
      "boostsInfo": "Numerical traits that show as circle progress bars",
      "date": "Date",
      "dateInfo": "Date traits that show as date boxes",
      "displaySettings": "Display Settings",
      "hideDisplay": "Hide on Store website",
      "levels": "Levels",
      "levelsInfo": "Numerical traits that show as progress bar",
      "preview": "Go to preview",
      "properties": "Properties",
      "propertiesInfo": "Textual traits that show as text boxes",
      "showDisplay": "Show on store website",
      "stats": "Stats",
      "statsInfo": "Numerical traits that show as number boxes",
      "title": "NFT data",
      "technicalDetails": "NFT technical details",
      "uploadDescription": "Upload image, video, audio, or a 3D-model. Supported file formats: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB.",
      "unlockableContent": "Unlockable Content",
      "unlockableContentInfo": "Content is only visible to the NFT owner"
    },
    "transaction": {
      "chain": "Chain",
      "chainId": "Chain ID",
      "empty": "Your collection has currently no transactions",
      "emptyInfo": "If you just deployed your collection, please wait a minute for the collection to deploy.",
      "hash": "Transaction Hash",
      "link": "Transaction Link",
      "title": "Transactions",
      "status": {
        "1": "PENDING",
        "2": "CONFIRMED",
        "3": "FAILED",
        "4": "ERROR"
      },
      "type": {
        "1": "DEPLOY CONTRACT",
        "2": "TRANSFER CONTRACT OWNERSHIP",
        "3": "MINT NFT",
        "4": "SET COLLECTION BASE URI",
        "5": "BURN NFT",
        "6": "MINT NEST NFT"
      }
    },
    "upload": {
      "avatar": "Upload avatar",
      "addNft": "Add NFT",
      "attributes": "Review metadata attributes",
      "attributesInfo": "Attributes are key traits of NFTs, forming part of the metadata that defines their unique characteristics. Which ones would you like to include?",
      "cover": "Upload cover image",
      "csvConfirm": "Confirm CSV data",
      "csvConfirmAttributes": "Confirm attributes",
      "csvFile": "Select CSV file",
      "csvFileDesc": "",
      "csvHelp": "Need help structuring your CSV file?",
      "deploy": "Deploy",
      "deployError": "There is a problem with deploy.",
      "downloadCsv": "Download CSV example",
      "differentFile": "Upload different file",
      "dragAndDrop": "Drag & drop or click to upload.",
      "images": "Upload files",
      "imagesConfirm": "Confirm & upload images",
      "imagesDesc": "",
      "infoFile": "Import your NFTs with a CSV file in two simple steps: \n\nupload the CSV, then add images or media. Ensure file names match the CSV metadata.",
      "infoImages": "Upload NFT files, including images or other media, for your collection. Ensure file names match the CSV metadata from the previous step.",
      "logo": "Upload logo",
      "preview": "Preview upload",
      "previewConfirm": "Looks good, proceed",
      "previewNfts": "Preview your NFTs",
      "selectAttributes": "Select attributes",
      "takeMeBack": "Take me back",
      "titleCsv": "Import CSV",
      "titleImage": "Upload NFT files"
    },
    "validation": {
      "csvMissingAttributes": "Are you sure you want to continue with no attributes?",
      "csvMissingData": "Missing metadata, num of row must be same as maxSupply",
      "csvRequiredColumns": "Missing metadata columns, required columns:",
      "fileInvalid": "Invalid file format. Please upload a valid CSV file with columns \"name\", \"description\", and \"image\".",
      "imagesMissing": "Missing images:",
      "imagesInvalid": "Invalid image names. Example: ",
      "selectAmount": "Please select how many NFTs would you like to create."
    },
    "website": {
      "autoDeploy": {
        "name": "NFT store autodeploy",
        "description": "This will automatically deploy your NFT store to Apillon hosting. No setup needed - just go live with the template.",
        "usage": ["No code", "Plug & Play"]
      },
      "build": {
        "name": "Build your own store",
        "description": "Use pre-made templates on GitHub to customize your store. Follow the CI flow to build and deploy it with your own setup.",
        "usage": ["Code required", "Customize", "CI/CD"]
      }
    },
    "add": "Add NFT",
    "addNfts": "Add NFTs",
    "addNftsNow": "Now you can add NFTs to collection or you can do it later.",
    "addAttribute": "Add row",
    "addIpns": "Add IPNS",
    "addIpnsInfo": "With IPNS, you will be able to modify the metadata and add new NFTs to this collection.",
    "create": "Create an NFT",
    "mainnet": "Production",
    "openBucket": "Go to storage",
    "openCollection": "Go to collection",
    "search": "Search environment",
    "step": "Step {step}",
    "testnet": "Testnet",
    "tokens": "tokens",
    "transactionType": "Transaction Type",
    "marketplaces": "Discover marketplaces"
  }
}
