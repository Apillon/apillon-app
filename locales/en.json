{
  "general": {
    "accept": "Accept",
    "action": "Action",
    "actions": "Actions",
    "active": "active",
    "activity": "Activity",
    "addNew": "Add new",
    "address": "Address",
    "attach": "Attach",
    "attachService": "Attach {service} service",
    "cancel": "No, cancel",
    "comingSoon": "Coming soon",
    "confirm": "Confirm",
    "cookieNotice": "This website uses cookies to ensure you get the best experience on our website.",
    "copyrights": "© Apillon",
    "create": "Create",
    "created": "created",
    "customize": "Customize",
    "customizeDeploy": "Customize and deploy",
    "decline": "Decline",
    "delete": "Delete",
    "description": "Description",
    "deselectAll": "Deselect All",
    "download": "Download",
    "edit": "Edit",
    "environment": "Environment",
    "error": "Error",
    "explore": "Explore",
    "goHome": "Go home",
    "install": "Install",
    "images": "images",
    "learn": "Learn",
    "learnMore": "Learn more",
    "live": "Live",
    "login": "Log in",
    "logout": "Log out",
    "method": "Method",
    "month": "month",
    "name": "Name",
    "notActive": "not active",
    "nothingHere": "Nothing here",
    "ok": "OK",
    "open": "Open",
    "or": "or",
    "paused": "paused",
    "pending": "pending",
    "pleaseSelect": "Please select",
    "production": "Production",
    "refresh": "Refresh",
    "restore": "Restore",
    "scope": "Scope",
    "search": "Search",
    "secret": "Secret",
    "selectAll": "Select All",
    "serviceName": "Service name",
    "serviceType": "Service type",
    "signup": "Sign up",
    "skip": "Skip",
    "smBy": "Smart contracts by",
    "staging": "Staging",
    "status": "Status",
    "tryAgain": "Try again",
    "terms": "terms and conditions",
    "termsAccept": "I accept the ",
    "termsAndConditions": "Terms and conditions",
    "test": "Test",
    "total": "{total} total",
    "type": "Type",
    "typeHere": "Type here",
    "updateTime": "Update time",
    "upload": "Upload",
    "uptime": "Uptime",
    "uuid": "UUID",
    "view": "View",
    "viewDemo": "View demo"
  },
  "auth": {
    "footer": {
      "support": "Support",
      "docs": "Docs",
      "terms": "Terms",
      "privacy": "Privacy"
    },
    "login": {
      "description": "Web3 will not build itself. Go and add your block.",
      "dontHaveAccount": "Don't have Apillon account yet?",
      "enterNewPassword": "Enter new password",
      "enterYourEmail": "Enter your e-mail",
      "forgotPassword": "Did you forget your password?",
      "magicLink": "Send me a Magic Link",
      "orUseEmail": "or log in using email",
      "passwordReplaced": "Your password has been replaced",
      "projectName": "Project_name",
      "resetHere": "Reset here",
      "resetPassword": "Reset password",
      "title": "Log in",
      "wallet": "Log in with Wallet",
      "withEmail": "Log in with email",
      "kilt": "Log in with KILT "
    },
    "onboarding": {
      "buildCustomApp": "Build a custom app with all the necessary blockchain-based services for your use case.",
      "buildDemo": "OK, let's do demo first",
      "buildWeb3": "“Build versatile and high-performing Web3 solutions with Apillon. Harness the power of blockchain technology and create next-gen dapps through simple yet robust APIs”",
      "createWeb3Project": "Create Web3 project",
      "demoProject": "Demo project",
      "getStarted": "Get started",
      "goToDocs": "Go to Docs",
      "loader": "Put your Web3 hat on, your dashboard is getting ready.",
      "skip": "Skip to the dashboard",
      "startBuilding": "Start building",
      "viewDemo": "View demo",
      "walkThroughWeb3": "Walk through a fully Web3-compatible website demo, test a few services and check open-source code.",
      "web3Gateway": "Your Gateway to Web3",
      "web3ProjectName": "Your  Web3 project needs a name"
    },
    "signup": {
      "signup": "Sign up",
      "alreadyHaveAccount": "Already have an account?",
      "checkEmail": "Check your e-mail",
      "checkInbox": "Crickets in your inbox?",
      "continueWithAT": "Continue with Apillon",
      "description": "Deploy, monitor, and scale with our fully managed blockchain-based back-end service.",
      "emailConfirmed": "Email confirmed",
      "emailSent": "We just sent an email containing a link to {email}. \n Click on it to activate your account.",
      "enterDesiredPassword": "Enter a password to finish creating the account.",
      "madeMistake": "Made a mistake?",
      "newsletter": "I would like to receive product updates, new feature releases, how-to guides and other platform-related content.",
      "orUseEmail": "or sign up using email",
      "sendAgain": "Send again",
      "title": "Build your first Web3 project",
      "titleReferalZiggi": "Welcome, traveler! Register below and start building.",
      "wallet": "Register with Wallet",
      "walletConfirmed": "Wallet and email confirmed, logging you in...",
      "walletEmail": "Email is required for wallet login",
      "withWallet": "or sign up with Wallet",
      "withEmail": "Sign up with email"
    },
    "terms": {
      "accept": "I have read and agree to ",
      "acceptEnd": " before creating an account.",
      "agree": "I have read and agree to ",
      "and": " and ",
      "app": "Airdrop Privacy  Policy",
      "consent": "I consent to ",
      "pp": "Privacy  Policy",
      "tc": "Terms and Conditions",
      "terms": "Terms"
    },
    "wallet": {
      "connect": {
        "btn": "Connect Polkadot wallet",
        "info": "Connect with one of Polkadot's wallet",
        "polkadot": "Connect Polkadot wallet",
        "success": "You successfully logged in with your Wallet",
        "title": "Connect wallet",
        "different": "Connect different wallet",
        "wallet": "Connect wallet"
      },
      "connected": {
        "info": "Wallet is connected with your account",
        "success": "Wallet has been successfully connected",
        "title": "Polkadot wallet connected",
        "wallet": "Connected wallet"
      },
      "disconnect": {
        "success": "Wallet has been successfully disconnected",
        "wallet": "Disconnect wallet"
      },
      "evm": {
        "connect": "Connect EVM wallet",
        "connected": "EVM wallet connected",
        "disconnect": "Disconnect EVM wallet",
        "info": "Connect your EVM compatible wallet.",
        "title": "Choose EVM wallet"
      },
      "login": {
        "success": "Wallet has been successfully connected",
        "title": "Log in with wallet",
        "walletAccountNotConnected": "A wallet account must be connected",
        "walletNotConnected": "A wallet must be connected",
        "walletNotConnected2": "A wallet must be connected, please reconnect. If the issue persist try reloading."
      },
      "address": "Wallet address",
      "createAccount": "This wallet hasn't got any account. Create an account first."
    }
  },
  "computing": {
    "contract": {
      "addNew": "Add new contract",
      "address": "Contract address",
      "assignCid": "Assign CID to NFT",
      "assignDisabled": "Please upload file first, to encrypt content and assign it to NFT.",
      "create": "Create contract",
      "createBucket": "Create a bucket",
      "createFirst": " Start creating",
      "deployerAddress": "Deployer address",
      "deposit": "Deposit to cluster",
      "edit": "Edit",
      "empty": "Create Schrödinger’s NFT contract",
      "emptyInfo": "Schrödinger’s NFT is the first use case of Apillon’s Web3 Computing. More options will follow.",
      "encryptFile": "Encrypt file",
      "infoBucket": "Apillon will now create a new Web3 storage bucket where you will be able to upload all your NFT files.",
      "infoBucketCreation": "Apillon is creating a new Web3 storage bucket where the NFT files will go.",
      "infoBucketCreated": "You will now be able to upload your NFT metadata and NFT images to it.",
      "name": "Contract name",
      "new": "New Schrödinger’s NFT contract",
      "orSelectExisting": "or select existing bucket",
      "selectBucket": "Continue with selected bucket",
      "status": "Contract status",
      "title": "Contract title",
      "titleBucket": "Let’s get you a bucket",
      "titleBucketCreation": "Bucket creation in progress",
      "titleBucketCreated": "Bucket successfully created",
      "transfer": "Transfer ownership",
      "uuid": "Contract UUID",
      "created": {
        "display": "Create website to decrypt files with",
        "info": "To decrypt your files, you need a website. \nUse the Apillon Schrodinger template and host it on a decentralized network.",
        "template": "Schrodinger Template",
        "title": "Decrypt encrypted files"
      },
      "encrypt": {
        "step1": "Choose bucket",
        "step2": "Upload, encrypt & assign CID",
        "step2Info": "Encrypted file is being uploaded to IPFS.",
        "step3": "Finished",
        "step3Info": "The file has been encrypted and CID has been assigned to NFT.",
        "step3Btn": "Encrypt another file"
      },
      "type": {
        "1": "Schrödinger’s NFT"
      }
    },
    "upload": {
      "dragAndDrop": "Drag & drop file",
      "upload": "Upload file",
      "uploaded": "Uploaded file:"
    },
    "transaction": {
      "contractId": "Chain ID",
      "hash": "Transaction Hash",
      "statusMessage": "Status message",
      "transactionType": "Transaction type",
      "status": {
        "1": "PENDING",
        "2": "IN PROGRESS",
        "3": "FAILED",
        "4": "ERROR",
        "5": "SUCCESS",
        "6": "ERROR"
      },
      "type": {
        "1": "DEPLOY CONTRACT",
        "2": "TRANSFER CONTRACT OWNERSHIP",
        "3": "DEPOSIT TO CONTRACT CLUSTER",
        "4": "ASSIGN CID TO NFT"
      }
    },
    "title": "Computing"
  },
  "dashboard": {
    "apiKey": {
      "apiKey": "API key",
      "apiKeySecret": "API key secret",
      "authentication": "Authentication",
      "authorization": "Authentication",
      "delete": "Delete API key",
      "details": "API key details",
      "generate": "Generate new key",
      "secretSaved": "I've saved API key's secret",
      "title": "API Keys",
      "update": "Update API key",
      "service": {
        "authentication": "Authentication service",
        "computing": "Computing service",
        "hosting": "Hosting service",
        "nft": "NFT service",
        "social": "Social service",
        "storage": "Storage service"
      }
    },
    "clipboard": {
      "copied": "Text has been copied to clipboard",
      "copy": "Copy to clipboard",
      "copyApiKey": "Copy API key to clipboard",
      "copyCid": "Copy CID",
      "copyLink": "Copy link",
      "copyUuid": "Copy UUID",
      "error": "Failed to copy"
    },
    "credits": {
      "amount": "Amount",
      "bonus": "Bonus credits",
      "buy": "Buy",
      "buyWithCrypto": "Buy with Crypto",
      "buyWithCreditCard": "Buy with Credit Card",
      "buyWithDot": "Buy with DOT",
      "available": "available",
      "category": "Category",
      "checkPrice": "Check price",
      "confirmPrices": "I understand",
      "cost": "Cost",
      "credits": "credits",
      "creditsAmount": "Credit amount",
      "creditCosts": "Service costs",
      "currentCredits": "Current credits",
      "date": "Date and time",
      "description": "Description",
      "direction": "Direction",
      "disabled": "Due to limitations set by our payment provider, this payment is disabled",
      "filterByChain": "Filter by chain",
      "filterByService": "Filter by service",
      "getMore": "Get more",
      "included": "Can be used for:",
      "name": "Name",
      "packages": "Credit packages",
      "product_id": "Product ID",
      "service": "Service",
      "serviceDescription": "Service description",
      "serviceStorage": "Web3 Storage",
      "title": "Credits",
      "transactions": "Credit transactions",
      "threshold": "Credit notification threshold",
      "yourFunds": "Your funds",
      "includedServices": ["All Web3 services", "All prebuilt solutions", "All smart contracts"],
      "services": {
        "COMPUTING": {
          "name": "Web3 Computing",
          "description": null
        },
        "HOSTING": {
          "name": "Web3 Hosting",
          "description": null
        },
        "IDENTITY": {
          "name": "Web3 Identity",
          "description": null
        },
        "NFT": {
          "name": "NFTs",
          "description": null
        },
        "SOCIAL": {
          "name": "Social",
          "description": null
        },
        "STORAGE": {
          "name": "Web3 Storage",
          "description": null
        }
      }
    },
    "invoice": {
      "client": "Client",
      "currency": "Currency",
      "invoices": "Credit purchases",
      "referenceTable": "Reference",
      "subtotalAmount": "Subtotal",
      "totalAmount": "Total",
      "date": "Date and time"
    },
    "nav": {
      "access": "Access",
      "authentication": "Authentication",
      "apiKeys": "API Keys",
      "analytics": "Analytics",
      "billing": "Billing & usage",
      "configuration": "Configuration",
      "computing": "Computing",
      "explore": "Explore",
      "hosting": "Hosting",
      "nft": "NFTs",
      "projectOverview": "Project overview",
      "projectSettings": "Project settings",
      "services": "Web3 Services",
      "smartContracts": "Smart Contracts",
      "social": "Social",
      "solutions": "Pre-built Solutions",
      "storage": "Storage"
    },
    "pageMenu": {
      "access": "Access",
      "accountManagement": "Account management",
      "apiKeys": "API Keys",
      "billing": "Billing",
      "charts": "Charts",
      "credentials": "Credentials & API Keys",
      "credits": "Credits",
      "destroy": "Destroy",
      "history": "History",
      "methods": "Methods",
      "payments": "Overview",
      "priceList": "Price list",
      "profile": "Profile",
      "projectSettings": "Project settings",
      "usage": "Usage",
      "usersPermissions": "Users & permissions"
    },
    "payment": {
      "buyCredits": "Buy credits",
      "costs": "Costs",
      "changePlan": "Change plan",
      "comparePlans": "Compare plans",
      "currentPlan": "Current plan",
      "expiresOn": "Expires on:",
      "decline": "Decline",
      "managePlan": "Manage billing",
      "notEnoughCredits": "You don't have enough credits. Please, buy more credits to proceed",
      "proceed": "Proceed",
      "selectPlan": "Select plan",
      "spendingAlert": "Spending ALERT!",
      "title": "Payment",
      "upgrade": "Upgrade",
      "upgradePlan": "Upgrade plan",
      "stripe": {
        "credits": "Successfully acquired {credits} credits.",
        "error": "Failed to subscribe",
        "subscription": "Successfully subscribed to a {plan} plan."
      }
    },
    "permissions": {
      "notOwner": "Only project owner can perform this action.",
      "read": "Read permissions",
      "write": "Write permissions",
      "execute": "Execute permissions",
      "insufficient": "You don't have permissions to create or edit this item."
    },
    "service": {
      "authentication": {
        "name": "Decentralized Authentication",
        "description": "Boost users’ privacy and security with decentralized digital identity.",
        "didCount": "Number of digital identities",
        "emptyTitle": "Your project does not have Authentication service yet",
        "emptyInfo": "Add Web3 Authentication and create an API key.",
        "emptyBtn": "Attach Web3 Auth",
        "usage": ["decentralized id", "HIGH PRIVACY", "SEAMLESS UI", "OAuth protocol"]
      },
      "computing": {
        "contractCount": "Number of contracts",
        "computingTransactionCount": "Number of transactions",
        "description": "Embrace the future of Web3 off-chain computation. Access the internet, boost performance, fully multichain, and ultimate data security.",
        "name": "Computing",
        "usage": [
          "computing smart contracts",
          "cross-chain",
          "secure computing environment",
          "internet access"
        ]
      },
      "hosting": {
        "name": "Decentralized Hosting",
        "description": "Make your website or app unstoppable and free from third-party impact.",
        "title": "Web3 Hosting",
        "usage": ["unstoppable", "domain support", "free ssl support", "drag-n-drop ui"],
        "usedBandwidth": "Used bandwidth",
        "websiteCount": "Number of websites"
      },
      "nft": {
        "collectionCount": "Number of collections",
        "description": "Launch a fully decentralized NFT collection with one click. Create NFTs, deploy smart contract and host the website on IPFS.",
        "name": "NFTs",
        "nftTransactionCount": "Number of transactions",
        "usage": [
          "storage buckets",
          "smart contracts",
          "drag-n-drop ui",
          "website template",
          "hosting"
        ]
      },
      "social": {
        "description": "Connect and communicate with freedom. Experience social networking with secure and decentralized chat functionality.",
        "name": "Social",
        "postCount": "Number of channels",
        "spaceCount": "Number of hubs",
        "usage": [
          "social media",
          "real-time chat",
          "user-friendly UI",
          "HIGH PRIVACY",
          "configurable interface"
        ]
      },
      "storage": {
        "bucket": "Web3 storage bucket",
        "bucketCount": "Number of buckets",
        "description": "Make your content permanently accessible and easily shareable.",
        "fileCount": "Number of files",
        "name": "Decentralized Storage",
        "website": "Main Website Storage",
        "usage": ["storage buckets", "different media", "drag-n-drop ui", "ipfs"]
      },
      "addFirst": "Add first service",
      "delete": "Delete service",
      "description": "Choose the Web3 services to power the infrastructure behind your Web3 project and build using simple APIs, CLI, or SDK by Apillon. Launch a service, receive API keys and start building your next Web3 project.",
      "edit": "Edit service",
      "info": "Launch a service, receive API keys and start building your next dapp.",
      "new": "New service",
      "used": "Web3 services used"
    },
    "smartContracts": {
      "collection": "NFT collection",
      "info": "Browse the list of smart contracts you can deploy and integrate and start building immediately via API.",
      "kraken": "Smart contract for Kraken",
      "meerkats": "Meerkats"
    },
    "solution": {
      "encryption": {
        "name": "Encryption as a Service",
        "description": "Provide public service allowing NFT owners to upload and encrypt files using Phala Compute.",
        "configure": {
          "customEvm": "Custom EVM",
          "formName": "Name your Compute instance for personal reference.",
          "nftCollection": "Choose NFT Collection Chain",
          "nftCollectionInfo": "To enable the encryption functionality, you need an NFT collection. Select the chain your NFT collection is deployed on."
        },
        "deploy": {
          "finish": "Deployment Success",
          "finishInfo": "Your prebuilt solution is successfully deployed.",
          "goBack": "Go back to Computing",
          "goToContract": "Go to contract",
          "loading": "Deploying to blockchain....",
          "loadingInfo": "Give it a minute or two. You’ll be informed when the deployment is done.",
          "preview": "Deploy preview",
          "previewData": "Contract data",
          "previewInfo": "Here is the overview of your deploy:",
          "previewNftCollection": "NFT Collection"
        },
        "tabs": ["Choose Computing Solution", "Configure Deployment", "Deploy"],
        "usage": []
      },
      "fileSharing": {
        "name": "Decentralized File Sharing",
        "description": "Crypto ipsum bitcoin ethereum dogecoin litecoin. Ethereum flow bancor TRON enjin. Bancor zcash neo gala.",
        "usage": ["metadata storage", "file storage"]
      },
      "nftAirdrop": {
        "name": "NFT Email Airdrop",
        "description": "Create an NFT collection, upload target addresses and automatically distribute NFTs to them.",
        "content": [
          {
            "content": "This ready-to-use solution allows you to distribute digital collectibles (NFTs) to your audience only through email addresses."
          },
          {
            "title": "The admin panel you will set up will allow you to:",
            "content": [
              "Add email addresses one by one or upload a file with multiple email addresses at once,",
              "See which email addresses did and did not receive NFTs,",
              "See wallets linked to each email,",
              "Send automatic email instructions to each address leading to a page for claiming NFTs."
            ]
          },
          {
            "title": "Before you start, you'll need to:",
            "content": [
              "Create an NFT collection using [Apillon NFT Service](/dashboard/service/nft),",
              "Know the details of email server, e. g. location and address,",
              "Use an Ethereum-based digital wallet to access the admin panel,",
              "Have [Apillon API key and secret](/dashboard/api-keys) to connect to the Apillon dashboard."
            ]
          },
          {
            "title": "System setup",
            "content": [
              "The front end is made with Vue.js,",
              "The back end is made with Node.js and stores information in a MySQL database."
            ]
          },
          {
            "title": "Options to run the solution",
            "content": [
              "You can run the front end on your computer, host it on any website provider, or use [Apillon's Web3 Hosting](/dashboard/service/hosting) service via the Apillon dashboard or GitHub actions.",
              "You can run the back end on your computer or use a tool called Docker to set configuration files with the correct information, e.g., the details of your NFTs and your email server (see instructions on [GitHub](https://github.com/Apillon/ps-email-airdrop))."
            ]
          }
        ],
        "tabs": ["First task", "Second task", "Third task"],
        "usage": ["metadata storage", "file storage", "smart contracts", "publish to opensea"]
      },
      "nftCollection": {
        "name": "Self-hosted NFT collection",
        "description": "Get your self sovereign standalone NFT collection with one click. Create NFTs, deploy smart contract and finally host the collection website.",
        "content": [
          {
            "title": "How does it work?",
            "content": "Launch your end-to-end decentralized NFT collection with one click. Create NFTs, deploy smart contract and host the collection website on Web3.",
            "benefits": ["Free metadata storage", "0 gas cost", "Free web template", "Free hosting"]
          }
        ],
        "tabs": ["Create Collection", "Preview Collection", "Mint NFTs"],
        "usage": [
          "metadata storage",
          "file storage",
          "smart contracts",
          "website template",
          "hosting"
        ]
      },
      "nftContentDelivery": {
        "name": "NFT-Based Content Delivery",
        "description": "Encrypt private files or assets using an NFT key. Sell or transmit the key to new owner/s and grant them access.",
        "content": [
          {
            "title": "How does it work?",
            "content": "Schrödinger’s NFT feature allows you to encrypt sensitive files of any kind using NFTs from a premade NFT collection. \n\nWith NFT-based content delivery, you can attach different files to each NFT in the collection. The files are then encrypted using unique data from the NFT and stored on a decentralized network. \n\nAs you sell or transfer the NFT, the new owner also obtains the encrypted file/s and can unlock its contents using the newly acquired NFT.",
            "benefits": [
              "Selling music or audio",
              "Selling PDFs or e-books",
              "Selling video and other media files",
              "Encrypting and delivering sensitive documents"
            ]
          }
        ],
        "tabs": ["Choose Computing Solution", "Configure Deployment", "Deploy"],
        "usage": ["PHALA"]
      },
      "nftDrop": {
        "name": "NFT Drop",
        "description": "Crypto ipsum bitcoin ethereum dogecoin litecoin. Ethereum flow bancor TRON enjin. Bancor zcash neo gala.",
        "usage": ["metadata storage", "file storage"]
      },
      "nftEmailSignupAirdrop": {
        "name": "NFT Email Signup Airdrop",
        "description": "Airdrop NFTs with a limited or unlimited supply to new and random user wallets.",
        "content": [
          {
            "content": "This ready-to-use solution allows you to distribute digital collectibles (NFTs) to your audience only through email addresses."
          },
          {
            "title": "The admin panel you will set up will allow you to:",
            "content": [
              "Add email addresses one by one or upload a file with multiple email addresses at once,",
              "See which email addresses did and did not receive NFTs,",
              "See wallets linked to each email,",
              "Send automatic email instructions to each address leading to a page for claiming NFTs."
            ]
          },
          {
            "title": "Before you start, you'll need to:",
            "content": [
              "Create an NFT collection using [Apillon NFT Service](/dashboard/service/nft),",
              "Know the details of email server, e. g. location and address,",
              "Use an Ethereum-based digital wallet to access the admin panel,",
              "Have [Apillon API key and secret](/dashboard/api-keys) to connect to the Apillon dashboard."
            ]
          },
          {
            "title": "System setup",
            "content": [
              "The front end is made with Vue.js,",
              "The back end is made with Node.js and stores information in a MySQL database."
            ]
          },
          {
            "title": "Options to run the solution",
            "content": [
              "You can run the front end on your computer, host it on any website provider, or use [Apillon's Web3 Hosting](/dashboard/service/hosting) service via the Apillon dashboard or GitHub actions.",
              "You can run the back end on your computer or use a tool called Docker to set configuration files with the correct information, e.g., the details of your NFTs and your email server (see instructions on [GitHub](https://github.com/Apillon/ps-signup-email-airdrop))."
            ]
          }
        ],
        "tabs": ["First task", "Second task", "Third task"],
        "usage": ["metadata storage", "file storage", "smart contracts", "publish to opensea"]
      },
      "nftLoyalty": {
        "name": "NFT-based Loyalty Program",
        "description": "Crypto ipsum bitcoin ethereum dogecoin litecoin. Ethereum flow bancor TRON enjin. Bancor zcash neo gala.",
        "usage": ["metadata storage", "file storage"]
      },
      "nftMembership": {
        "name": "NFT-based Brand Membership",
        "description": "Crypto ipsum bitcoin ethereum dogecoin litecoin. Ethereum flow bancor TRON enjin. Bancor zcash neo gala.",
        "usage": ["metadata storage", "file storage"]
      },
      "nftPoap": {
        "name": "PoAP - Proof of Attendance NFTs",
        "description": "Boost your event by creating PoAP drops in a click and let users mint or email-reserve NFTs.",
        "content": [
          {
            "content": "Proof of Attendance Protocol (PoAP) allows you to create digital keepsakes to commemorate special events and distribute them to your audience for their attendance."
          },
          {
            "headline": "Use cases",
            "title": "PoAPs can serve as:",
            "content": [
              "Digital collectibles, unique digital items that can be collected similarly to physical memorabilia",
              "Proof of participation proving a person's attendance at an event",
              "Reward system for engagement, participation, or contribution in an organization or event",
              "Community boosters to encourage interaction and participation and foster a sense of community",
              "Tradeable NFTs as a form of investment or monetization of event participation",
              "Exclusive access to invite-only events, content, or privileges in online communities"
            ]
          },
          {
            "headline": "How does it work?",
            "title": "The solution consists of the admin dashboard and a webpage for claiming PoAP NFTs.",
            "content": [
              "On the admin dashboard, you can create and manage PoAP events, see their status and statistics and link them with NFTs created on the Apillon dashboard.",
              "The webpage is displayed at the event and allows your audience to claim their NFTs."
            ]
          },
          {
            "title": "User flow",
            "content": [
              "A user scans the QR code on the claim-NFT page and enters their email.",
              "Email instructions with a link for NFT minting are sent to the email address.",
              "The user connects their wallet and mints a PoAP NFT on the minting page."
            ]
          },
          {
            "title": "Before you start, you'll need to:",
            "content": [
              "Create an NFT collection using [Apillon NFT Service](/dashboard/service/nft), allowing event attendees to mint NFTs."
            ]
          },
          {
            "title": "System setup",
            "content": [
              "The front end is made with Vue.js,",
              "The back end is made with Node.js and stores information in a MySQL database."
            ]
          },
          {
            "title": "Options to run the solution",
            "content": [
              "You can run the front end on your computer, host it on any website provider, or use [Apillon's Web3 Hosting](/dashboard/service/hosting) service via the Apillon dashboard or GitHub actions.",
              "You can run the back end on your computer or use a tool called Docker to set configuration files with the correct information, e.g., the details of your NFTs and your email server (see instructions on [GitHub](https://github.com/Apillon/ps-proof-of-attendance))."
            ]
          }
        ],
        "usage": ["metadata storage", "file storage"]
      },
      "nftWhitelistClaim": {
        "name": "Whitelist NFT Claim",
        "description": "Instead of giving out NFTs for free, let users claim them and pay transaction fees.",
        "content": [
          {
            "content": "This ready-to-use solution allows your audience to claim NFTs by covering transaction fees, instead of you distributing NFTs for free."
          },
          {
            "title": "How does it work?",
            "content": [
              "Users can claim NFTs only if their addresses are added to a list in your admin panel.",
              "As admin, you can manage the admin panel and the list of addresses allowed to claim NFTs."
            ]
          },
          {
            "title": "Before you start, you will need:",
            "content": ["A smart contract allowing eligible users to claim NFTs"]
          },
          {
            "title": "System setup",
            "content": [
              "The front end is made with Vue.js,",
              "The back end is made with Node.js and stores information in a MySQL database."
            ]
          },
          {
            "title": "Options to run the system",
            "content": [
              "You can run the front end on your computer, host it on any website provider, or use [Apillon's Web3 Hosting](/dashboard/service/hosting) service via the Apillon dashboard or GitHub actions.",
              "You can run the back end on your computer or use a tool called Docker to set configuration files with the correct information, e.g., the details of your NFTs and your email server (see instructions on [GitHub](https://github.com/Apillon/ps-whitelist-claim))."
            ]
          }
        ],
        "tabs": ["First task", "Second task", "Third task"],
        "usage": ["metadata storage", "file storage", "smart contracts", "publish to opensea"]
      },
      "openGov": {
        "name": "OpenGov WASM Proposal Airdrop",
        "description": "Send NFTs using WASM smart contract to Aye/Nay voters on an OpenGov proposal.",
        "content": [
          {
            "content": "This ready-to-use solution allows you to distribute NFTs using a WASM smart contract to voters on Polkassembly OpenGov proposals."
          },
          {
            "title": "How does it work?",
            "content": [
              "On a simple webpage, enter the number of a proposal and the vote (Aye/Nay) you wish to reward with NFTs.",
              "All the accounts that voted that way will be shown on a list you can edit.",
              "Once you've finished editing the list, the NFTs will be sent to all the listed addresses."
            ]
          },
          {
            "title": "Before you start, you need to:",
            "content": [
              "Create an NFT collection using [Apillon NFT Service](/dashboard/service/nft),",
              "Use an Ethereum-based digital wallet to access the admin panel,",
              "Have [Apillon API key and secret](/dashboard/api-keys) to connect to the Apillon dashboard.",
              "Know details about a specific OpenGov proposal."
            ]
          },
          {
            "title": "System setup",
            "content": [
              "The front end is made with Vue.js,",
              "The back end is made with Node.js and stores information in a MySQL database."
            ]
          },
          {
            "title": "Options to run the solution",
            "content": [
              "You can run the front end on your computer, host it on any website provider, or use [Apillon's Web3 Hosting](/dashboard/service/hosting) service via the Apillon dashboard or GitHub actions.",
              "You can run the back end on your computer or use a tool called Docker to set configuration files with the correct information, e.g., the details of your NFTs and your email server (see instructions on [GitHub](https://github.com/Apillon/ps-wasm-proposal-airdrop))."
            ]
          }
        ],
        "tabs": ["First task", "Second task", "Third task"],
        "usage": ["metadata storage", "file storage", "smart contracts", "publish to opensea"]
      },
      "tokenGating": {
        "name": "Token Gating",
        "description": "Crypto ipsum bitcoin ethereum dogecoin litecoin. Ethereum flow bancor TRON enjin. Bancor zcash neo gala.",
        "usage": ["metadata storage", "file storage"]
      },
      "wallet": {
        "name": "Non-custodial Wallet",
        "description": "Crypto ipsum bitcoin ethereum dogecoin litecoin. Ethereum flow bancor TRON enjin. Bancor zcash neo gala.",
        "usage": ["metadata storage", "file storage"]
      },
      "choose": "Choose Solution",
      "deploy": "Deploy solution",
      "chooseComputing": "Select a computing template for your project. Deploy it on testnet to test it and fix if needed before launching in production on mainnet.",
      "description": "Quickly deploy pre-built templates made and audited by Apillon. Each solution features a combination of Web3 services to demonstrate how they can be combined together, so you can learn, experiment, and launch your Web3 project fast.",
      "includedWeb3Services": "Included Web3 Services",
      "info": "Customize ready-to-deploy templates built and audited by Apillon.",
      "viewCode": "View code"
    },
    "subscription": {
      "bandwidth": "Bandwith",
      "canceledOn": "Your plan will be canceled on {date}.",
      "creditsLifetime": "Credits Lifetime",
      "forever": "Forever",
      "free": "Free",
      "lifetime": "Lifetime",
      "monthly": "Monthly",
      "nextBilling": "Next billing cycle on {date}.",
      "otherServices": "Free credits for other services",
      "packages": "Subscription packages",
      "perMonth": "per month",
      "storage": "Storage",
      "web3Services": "Web3 services"
    },
    "usage": {
      "bandwith": "Bandwith",
      "bytesStored": "Byte stored",
      "description": "",
      "downloads": "Downloads",
      "hosting": "Web3 hosting",
      "storage": "Web3 storage",
      "title": "Project usage",
      "upgrade": "Increase quotas"
    },
    "adminMode": "You are in ADMIN mode!",
    "attached": "Attached",
    "attachService": "Attach service",
    "attachNewService": "Attach new service",
    "billing": "Billing and Usage",
    "changePayment": "Change payment",
    "clientLibraries": "Client Libraries",
    "created": "Created",
    "createTime": "Created at",
    "currentlyNotAvailable": "Currently not available. We will do our best to add this feature soon.",
    "dashboard": "Dashboard",
    "date": "Date",
    "discord": "Discord",
    "deletedAt": "Deleted at",
    "demoVideo": "Demo video",
    "email": "Email",
    "emailMethodConfiguration": "Email method configuration",
    "env": "Environment",
    "expiration": "Expiration",
    "gotIt": "Got it, thanks!",
    "goToApiManagement": "Go to central API management",
    "guides": "Guides",
    "homepage": "Project overview",
    "inviteTeamMember": "Invite team member",
    "learnMoreAboutServices": "Learn more about services",
    "manageRoles": "Manage roles",
    "name": "Name",
    "projectResources": "Project resources",
    "readDocs": "Read the Docs",
    "role": "Role",
    "searchDocs": "Search the docs",
    "secret": "Secret",
    "secrets": "Secrets",
    "total": "Total",
    "tutorials": "Tutorials",
    "user": "User",
    "viewInvoice": "View Invoice",
    "value": "Value",
    "visibleColumns": "Visible columns",
    "wiki": "Wiki",
    "w3Warn": "W3 warn"
  },
  "error": {
    "404": "Page not found",
    "40006022": "You have to upload \"index.html\" file, to deploy website!",
    "50012005": "You can't mint this collection or all tokens has already been minted!",
    "50012007": "Nfts out of stock!",
    "50012008": "Mint reserve supply out of stock!",
    "50012011": "Content encryption failed",
    "50012012": "Make sure parent doesn't have any children nested before burning. If you still experience issues try later or try burning another token.",
    "50012013": "Collection is not nestable!",
    "BAD_REQUEST": "There is a problem with this request. Please come back later when we fixed that problem.",
    "INVALID_PATH": "Invalid path",
    "INVALID_QUERY_PARAMETERS": "Invalid query parameters",
    "UNAUTHORIZED": "You are unauthorized for this action",
    "INVALID_TOKEN": "Invalid token",
    "AUTH_TOKEN_EXPIRED": "Your session has expired, please log in again.",
    "USER_IS_NOT_AUTHENTICATED": "User is not authenticated",
    "FORBIDDEN": "You don't have permission for this action",
    "USER_IS_NOT_AUTHORIZED": "User is not authorized",
    "CAPTCHA_NOT_PRESENT": "Please solve captcha",
    "Insufficient permissions to modify this record": "You don't have permission for this action",
    "DEFAULT_VALIDATOR_ERROR_CODE": "Validation error, please fill the form",
    "FORBIDDEN_RESOURCE": "You don't have permissions for this action",
    "ERR_CONNECTION_REFUSED": "Connection refused, please check your internet connection.",
    "Failed to fetch": "Connection refused, please check your internet connection.",
    "jwt expired": "Your session has expired, please log in again.",
    "API_KEY_NOT_PRESENT": "API key is missing",
    "API_KEY_SECRET_NOT_PRESENT": "API key secret is missing",
    "API_KEY_PROJECT_UUID_NOT_PRESENT": "API_KEY_PROJECT_UUID is missing",
    "API_KEY_ROLE_API_KEY_ID_NOT_PRESENT": "API_KEY_ROLE_API_KEY_ID is missing",
    "API_KEY_ROLE_ROLE_ID_NOT_PRESENT": "API_KEY_ROLE_ROLE_ID is missing",
    "API_KEY_ROLE_SERVICE_UUID_NOT_PRESENT": "API_KEY_ROLE_SERVICE_UUID is missing",
    "API_KEY_ROLE_PROJECT_UUID_NOT_PRESENT": "API_KEY_ROLE_PROJECT_UUID is missing",
    "API_KEY_ROLE_ROLE_ID_NOT_VALID": "API_KEY_ROLE_ROLE_ID is not valid",
    "MAX_API_KEY_QUOTA_REACHED": "You have reached the maximum number of API keys for this project.",
    "CREATE_API_KEY_PROJECT_UUID_NOT_PRESENT": "CREATE_API_KEY_PROJECT_UUID is missing",
    "BUCKET_PROJECT_UUID_NOT_PRESENT": "Bucket project ID is missing",
    "BUCKET_STORAGE_PLAN_ID_NOT_PRESENT": "Bucket storage plain ID is missing",
    "BUCKET_NAME_NOT_PRESENT": "Bucket name is missing",
    "DIRECTORY_BUCKET_ID_NOT_PRESENT": "Directory bucket is missing",
    "DIRECTORY_NAME_NOT_PRESENT": "Directory name is missing",
    "BUCKET_UUID_NOT_PRESENT": "Bucket UUID is missing",
    "PATH_NOT_PRESENT": "Path is missing",
    "CONTENT_TYPE_NOT_PRESENT": "Content type is missing",
    "SESSION_UUID_NOT_PRESENT": "Session UUID is missing",
    "BUCKET_TYPE_NOT_PRESENT": "Bucket type is missing",
    "WEBHOOK_ALREADY_EXISTS_FOR_PROJECT": "Webhook already exists",
    "MAX_BUCKETS_REACHED": "Maximum number of buckets is reached",
    "MAX_PROJECTS_REACHED": "Maximum number of projects is reached",
    "BUCKET_ALREADY_MARKED_FOR_DELETION": "Bucket already marked for deletion",
    "NOT_ENOUGH_STORAGE_SPACE": "Your run out of space. Please upgrade your subscription plan.",
    "MAX_USED_STORAGE_REACHED": "Your run out of space. Please upgrade your subscription plan.",
    "WEB_PAGE_NOT_FOUND": "Web page not found",
    "PUBLISH_IPNS_CID_NOT_PRESENT": "CID is missing",
    "MAX_BUCKET_SIZE_REACHED": "Maximum bucket size reached. The current bucket has reached its maximum capacity, and no additional data can be stored.",
    "CANNOT_DELETE_BUCKET_WITH_FILES": "Deleting a bucket with files is not possible. Please remove all files first.",
    "FILE_NAME_NOT_PRESENT": "File name is missing",
    "FILE_EXTENSION_NOT_PRESENT": "File extension is missing",
    "FILE_CONTENT_TYPE_NOT_PRESENT": "File content is missing",
    "FILE_VERSION_NOT_PRESENT": "File version is missing",
    "FILE_BODY_NOT_PRESENT": "File body is missing",
    "FILE_NOT_FOUND": "File not found",
    "WEBSITE_DOMAIN_CHANGE_NOT_ALLOWED": "Website domain can be changed every 15 minutes. ",
    "NO_FILES_TO_DEPLOY": "Please upload some files first.",
    "STATUS_NOT_PRESENT": "Status not present",
    "INVALID_STATUS": "Invalid status",
    "EMAIL_NOT_PRESENT": "Email is missing",
    "TOKEN_NOT_PRESENT": "Token is missing",
    "USER_EMAIL_NOT_PRESENT": "Email is missing",
    "USER_INVALID_LOGIN": "Wrong credentials",
    "USER_EMAIL_NOT_VALID": "Email is not valid",
    "USER_EMAIL_NOT_EXISTS": "Looks like your email is not in our books yet.",
    "USER_ALREADY_REGISTERED": "User already registered",
    "USER_EMAIL_ALREADY_TAKEN": "Please check your inbox as mail has already been sent.",
    "USER_UUID_NOT_PRESENT": "user_uuid is missing",
    "USER_UUID_ALREADY_EXISTS": "user_uuid already exists",
    "USER_PASSWORD_NOT_PRESENT": "Password is missing",
    "USER_AUTH_TOKEN_NOT_PRESENT": "AUTH_TOKEN is missing",
    "USER_AUTH_TOKEN_EXPIRES_IN_NOT_PRESENT": "AUTH_TOKEN_EXPIRES is missing",
    "USER_AUTH_TOKEN_TYPE_NOT_PRESENT": "AUTH_TOKEN_TYPE is missing",
    "CANNOT_MODIFY_PROJECT_OWNER": "Can't modify project owner",
    "PROJECT_DOES_NOT_EXISTS": "Project does not exists",
    "PROJECT_NAME_NOT_PRESENT": "Project name is missing",
    "PROJECT_UUID_NOT_PRESENT": "Project UUID is missing",
    "PROJECT_ID_NOT_PRESENT": "Project ID is missing",
    "MAX_NUMBER_OF_USERS_ON_PROJECT_REACHED": "The maximum number of users has been reached for this project.",
    "SERVICE_NAME_NOT_PRESENT": "Service name is missing",
    "SERVICE_TYPE_NOT_PRESENT": "Service type is missing",
    "SERVICE_UUID_NOT_PRESENT": "Service UUID is missing",
    "SERVICE_PROJECT_ID_NOT_PRESENT": "Project ID is missing",
    "API": "There has been an error. Please come back later when we fixed that problem.",
    "DEFAULT_SYSTEM_ERROR": "There has been an error. Please come back later when we fixed that problem.",
    "UNHANDLED_SYSTEM_ERROR": "There has been an error. Please come back later when we fixed that problem.",
    "SQL_SYSTEM_ERROR": "There has been an error. Please come back later when we fixed that problem.",
    "AWS_SYSTEM_ERROR": "There has been an error. Please come back later when we fixed that problem.",
    "MICROSERVICE_SYSTEM_ERROR": "There has been an error. Please come back later when we fixed that problem.",
    "ERROR_WRITING_TO_DATABASE": "There has been an error. Please come back later when we fixed that problem.",
    "ERROR_READING_FROM_DATABASE": "There has been an error. Please come back later when we fixed that problem.",
    "SERVICE_ERROR": "There has been an error. Please come back later when we fixed that problem.",
    "NO_CHANGES_TO_DEPLOY": "There have been no changes to your website. First, make some changes and deploy them to the staging.",
    "NFT_BASE_URI_NOT_PRESENT": "NFT base URI not present",
    "NFT_BASE_EXTENSION_NOT_PRESENT": "NFT base extension not present",
    "NFT_COLLECTION_BASE_URI_NOT_PRESENT": "NFT base URI not present",
    "NFT_DROP_BOOL_NOT_PRESENT": "NFT drop not present",
    "NFT_DROP_TIMESTAMP_NOT_PRESENT": "NFT drop timestamp not present",
    "NFT_RESERVE_NOT_PRESENT": "NFT reserve not present",
    "NFT_MINT_ADDRESS_NOT_VALID": "Mint address not valid",
    "NFT_DEPLOY_MINT_PRICE_NOT_VALID": "Mint price is not valid",
    "NFT_MINT_QUANTITY_NOT_PRESENT": "Mint Quantity not present",
    "NFT_MINT_QUANTITY_NOT_VALID": "Mint Quantity not valid. Enter a number between 1 and 20.",
    "NFT_TRANSFER_OWNERSHIP_ADDRESS_NOT_VALID": "Address not valid",
    "NFT_CONTRACT_OWNER_ERROR": "NFT contract has been transferred to another wallet.",
    "NFT_DEPLOY_BASE_EXTENSION_NOT_PRESENT": "NFT base extension not present",
    "NFT_COLLECTION_ROYALTIES_ADDRESS_NOT_PRESENT": "Royalties address is not present, please enter a valid Wallet address",
    "NFT_COLLECTION_ROYALTIES_ADDRESS_NOT_VALID": "Wrong royalties address, please enter a valid Wallet address",
    "INVALID_ADDRESS_FOR_TRANSFER_TO": "Wrong address, please enter different address",
    "MAX_COLLECTIONS_REACHED": "Max collections reached",
    "CREDIT_BALANCE_TOO_LOW": "Credit balance too low",
    "COMPUTING_ACCOUNT_ADDRESS_NOT_PRESENT": "Account address is missing",
    "COMPUTING_ACCOUNT_ADDRESS_NOT_VALID": "Account address is not valid",
    "COMPUTING_CONTRACT_TYPE_NOT_VALID": "Contract type is not valid",
    "CONTRACT_DOES_NOT_EXIST": "Contract does not exist",
    "CONTRACT_NOT_DEPLOYED": "Contract is not deployed",
    "TRANSACTION_FOR_TRANSFER_ALREADY_EXISTS": "Contract has already been transferred.",
    "REVIEW_ALREADY_SUBMITTED": "Review has already been submitted.",
    "fileDownload": "Download failed. Something went wrong during the download.",
    "fileUploadStopped": "Files will not upload to S3. If you uploaded any file, please upload it again.",
    "fileUploadMissing": "File by name \"{name}\" will not be uploaded. Please upload it again.",
    "request entity too large": "Request entity too large",
    "Unable to mint new NFTs, out of supply!": "Nfts out of stock!",
    "walletSignature": "'Could not capture your signature, check your wallet connection"
  },
  "form": {
    "apiKeyTypes": {
      "test": "Test",
      "live": "Live"
    },
    "authTypes": {
      "basic": "Basic",
      "bearer-token": "Bearer token",
      "none": "None"
    },
    "booleanSelect": {
      "true": "Yes",
      "false": "No"
    },
    "label": {
      "authType": "Auth type",
      "apiKeyName": "API Key name",
      "apiKeyType": "API Key type",
      "bearerToken": "Bearer token",
      "bucketDescription": "Bucket description",
      "bucketName": "Bucket name",
      "cardHolder": "Card holder",
      "cardNumber": "Card number",
      "chat": "Hub",
      "chatInfo": "Select one of your Hubs. Otherwise, you can leave this field empty and the default hub will be used.",
      "chatInfoEmpty": "You must create a Hub first. Otherwise, you can leave this field empty and the default hub will be used.",
      "chatAbout": "About",
      "chatImage": "Hub image",
      "chatName": "Hub name",
      "chatTags": "Tags",
      "collectionBaseUri": "Base URI",
      "collectionBaseExtension": "Base Extension",
      "collectionChain": "Chain",
      "collectionChainType": "Chain type",
      "collectionDropAddress": "Drop Withdrawal Address",
      "collectionDropStart": "Drop start",
      "collectionDrop": "Drop",
      "collectionMaxSupply": "How many?",
      "collectionDropPrice": "Price in {currency}",
      "collectionName": "Name",
      "collectionDropReserve": "Reserve",
      "collectionRevocable": "Revocable",
      "collectionRoyaltiesAddress": "Royalties address",
      "collectionRoyaltiesFees": "Royalties fees",
      "collectionSoulbound": "Soulbound",
      "collectionSymbol": "Symbol",
      "collectionSupplyLimited": "Total supply",
      "collectionType": "Collection type",
      "collectionUseGateway": "Use apillon gateway for base URI",
      "collectionLogo": "Collection logo",
      "collectionCoverImage": "Collection cover image",
      "confirmPassword": "Confirm password",
      "creditThreshold": "Notify me when credits are below the limit",
      "cvv": "CVV",
      "domain": "Domain name",
      "email": "Email address",
      "folderName": "Folder name",
      "folderDescription": "Folder description",
      "hostingDescription": "Hosting description",
      "hostingName": "Hosting name",
      "hostingSize": "Hosting size",
      "inviteByEmail": "Invite by email",
      "ipnsDescription": "IPNS description",
      "ipnsName": "IPNS name",
      "expirationDate": "Expiration date",
      "networkType": "Choose the desired network",
      "nftBurnTokenId": "Token ID",
      "nftMintAddress": "Address",
      "nftMintCollectionUuid": "Collection",
      "nftMintParentNftId": "Parent NFT ID",
      "nftMintQuantity": "Quantity",
      "nftSetBaseUri": "Set base URI",
      "nftTransferAddress": "Address",
      "nftId": "ID",
      "nftCollection": "Collection",
      "nftName": "Name",
      "nftCopies": "Copies",
      "nftDescription": "Description",
      "nftValue": "Value",
      "nftDisplayType": "Type",
      "nftTraitType": "Trait",
      "password": "Enter a 12-character password",
      "phone": "Phone",
      "postalCode": "Postal code",
      "projectName": "Project name",
      "projectDescription": "Project description",
      "role": "Role",
      "serviceName": "Service name",
      "username": "First and last name",
      "webhookPassword": "Password",
      "webhookUrl": "Webhook URL",
      "webhookUsername": "User name",
      "websiteDescription": "Website description",
      "websiteName": "Website name",
      "contract": {
        "accountAddress": "Account Address",
        "amount": "Amount",
        "cid": "CID",
        "contractType": "Contract type",
        "description": "Contract description",
        "file": "File",
        "name": "Contract name",
        "nftContractAddress": "NFT collection address",
        "nftChainRpcUrl": "Chain RPC URL",
        "nftId": "NFT ID",
        "restrictToOwner": "Restrict to owner",
        "useApillonCollection": "Use Apillon-built NFT collection",
        "labelInfo": {
          "nftContractAddress": "Address of the NFT collection used to encrypt/decrypt files.",
          "nftChainRpcUrl": "Chain RPC URL of used contract. Select one from the list or manually insert your own.",
          "restrictToOwner": "Only owner will be able to encrypt/decrypt files.",
          "useApillonCollection": "You can use an NFT collection you created on Apillon or any NFT collection you built on other chains."
        }
      }
    },
    "networkTypes": {
      "test": "Test network",
      "live": "Live network"
    },
    "supplyTypes": {
      "limited": "Limited",
      "unlimited": "Unlimited"
    },
    "placeholder": {
      "apiKeyName": "API Key name",
      "bearerToken": "Enter Bearer token",
      "bucketDescription": "Bucket description",
      "bucketName": "Bucket name",
      "bucketType": "Select Bucket type",
      "cardHolder": "John Doe",
      "cardNumber": "XXXX - XXXX - XXXX - XXXX",
      "chain": "Select Chain",
      "chatTags": "Separate Tags with Commas",
      "collectionMaxSupply": "Max supply",
      "complexPassword": "Enter complex password",
      "cvv": "311",
      "domain": "Type your domain name here",
      "email": "youremail{afna}mail.com",
      "fileStatus": "Select file status",
      "folderName": "",
      "folderDescription": "",
      "hostingDescription": "Hosting description",
      "hostingName": "Hosting name",
      "inviteByEmail": "Type e-mail",
      "ipnsDescription": "IPNS description",
      "ipnsName": "IPNS name",
      "expirationDate": "01/2023",
      "nftBurnTokenId": "Token ID",
      "nftMintAddress": "Address",
      "nftMintParentNftId": "Parent NFT ID",
      "nftMintQuantity": "Quantity",
      "nftTransferAddress": "Address",
      "password": "password",
      "phone": "+000 12345678",
      "postalCode": "4223",
      "projectName": "Enter project name",
      "projectDescription": "Enter project description",
      "reenterPassword": "Re-enter your complex password",
      "role": "Select role",
      "serviceName": "Enter the name for the new service",
      "selectCategory": "Filter by category",
      "selectDirection": "Filter by direction",
      "selectService": "Filter by service",
      "typeHere": "Type here",
      "username": "Enter your full name",
      "webhookPassword": "Enter password",
      "webhookUrl": "Webhook URL",
      "webhookUsername": "Enter user name",
      "websiteDescription": "Website description",
      "websiteName": "Website name",
      "contract": {
        "name": "Enter contract name",
        "description": "Enter contract description",
        "nftContractAddress": "Select or type NFT collection address",
        "nftChainRpcUrl": "Chain RPC URL",
        "accountAddress": "Account Address"
      }
    },
    "success": {
      "apiKey": "API key has been created",
      "filesUploaded": "Files have been successfully uploaded",
      "ipnsPublish": "IPNS is published in the background. You will be notified when it is done.",
      "ipnsPublished": "IPNS has been published",
      "nftBurned": "NFT token has been burned.",
      "nftDeployed": "NFT deploy requested.",
      "nftMint": "Minting NFT requested.",
      "nftSetBaseUri": "Base URI has been changed",
      "nftTransfer": "NFT ownership has been transferred",
      "profile": "Your profile data has been updated",
      "requestPasswordChange": "Check your mailbox! If nothing is there, we couldn't find your account.",
      "sendAgainEmail": "Email has been re-sent",
      "websiteDeployed": "Website has been deployed.",
      "websiteDeploying": "Done - deployment initiated",
      "contract": {
        "cidAssign": "CID has been assign to NFT",
        "deploy": "Contract deploy has been initiated",
        "encrypted": "Content has been encrypted",
        "transferred": "Contract transfer has been initiated"
      },
      "created": {
        "apiKey": "API key has been created",
        "apiKeyRole": "API key permission has been added",
        "apiKeyRoles": "API key permissions has been added",
        "authentication": "Authentication service has been created",
        "bucket": "Bucket has been created",
        "chatPost": "Channel has been created",
        "chatSpace": "Hub has been created",
        "collection": "Creating NFT collection requested.",
        "directory": "Folder has been created",
        "domain": "Domain has been added to Website",
        "file": "File has been created",
        "hosting": "Hosting has been created",
        "ipns": "IPNS has been created",
        "item": "Item has been created",
        "service": "Service has been created",
        "userInvite": "User has been invited.",
        "webhook": "Webhook has been created",
        "website": "Website has been created"
      },
      "deleted": {
        "apiKey": "API key has been deleted",
        "apiKeyRole": "API key permission has been removed",
        "authentication": "Authentication service has been deleted",
        "bucket": "Bucket has been deleted",
        "bucketContent": "Bucket items has been deleted",
        "contract": "Contract has been deleted",
        "directory": "Folder has been deleted",
        "domain": "Domain has been deleted",
        "file": "File has been deleted",
        "hosting": "Hosting has been deleted",
        "ipns": "IPNS has been deleted",
        "item": "Item has been deleted",
        "items": "Items has been deleted",
        "service": "Service has been deleted",
        "user": "User has been removed from project",
        "userUninvited": "User has been uninvited from project",
        "webhook": "Webhook has been deleted",
        "website": "Website has been deleted"
      },
      "restored": {
        "bucket": "Bucket has been restored",
        "directory": "Folder has been restored",
        "file": "File has been restored"
      },
      "updated": {
        "apiKey": "API key has been updated",
        "apiKeyRole": "API key permission has been added",
        "apiKeyRoles": "API key permissions has been added",
        "authentication": "Authentication service has been updated",
        "bucket": "Bucket has been updated",
        "contract": "Contract has been updated",
        "creditThreshold": "Credit threshold has been updated",
        "directory": "Folder has been updated",
        "domain": "Domain has been updated",
        "file": "File has been updated",
        "hosting": "Hosting has been updated",
        "ipns": "IPNS has been updated",
        "item": "Item has been updated",
        "project": "Project has been updated",
        "service": "Service has been updated",
        "userRole": "User role has been updated",
        "webhook": "Webhook has been updated",
        "website": "Website has been updated"
      },
      "newsletter": {
        "subscribed": "You have successfully subscribed to Apillon platform news."
      }
    },
    "terms": {
      "project": "I understand that the Apillon Closed Beta delivers no guarantees related to functionalities or access and is intended for testing purposes only. Beta features also come with several limitations, which will be removed with each platform update as more and more users deliver feedback on Closed Beta and help improve the platform's services.",
      "payment": "I understand the billing process and some other legal stuff."
    },
    "confirm": "Yes, confirm",
    "connect": "Connect",
    "createBucketAndContinue": "Create bucket & continue to management",
    "createHostingAndContinue": "Create hosting & continue to management",
    "createNewProject": "Create new project",
    "createNewService": "Create new service",
    "createServiceAndContinue": "Create service & continue to management",
    "continue": "Continue",
    "disabled": "Disabled",
    "generate": "Generate",
    "goBack": "Go back",
    "login": "Log in",
    "proceed": "Proceed",
    "reset": "Reset",
    "save": "Save",
    "saveCard": "Save card",
    "saveExit": "Save & exit",
    "sendInvite": "Send invite",
    "startFirstProject": "Start your first project",
    "update": "Update"
  },
  "hosting": {
    "deployment": {
      "env": {
        "1": "Staging",
        "2": "Production",
        "3": "Direct to production"
      },
      "status": {
        "0": "INITIATED",
        "1": "IN PROGRESS",
        "2": "IN REVIEW",
        "3": "APPROVED",
        "10": "SUCCESSFUL",
        "100": "FAILED",
        "101": "REJECTED"
      }
    },
    "domain": {
      "add": "Add domain",
      "configure": "Configure domain",
      "editDisabled": "Website domain can be changed every 15 minutes. ",
      "preview": "Domain preview",
      "setup": "Setup domain",
      "update": "Update domain"
    },
    "menu": {
      "preview": "1. Upload",
      "staging": "2. Preview",
      "production": "3. Production"
    },
    "review": {
      "confirm": "Proceed with Website Deployment, I'll wait",
      "content": [
        "Deployments of websites on the Free Plan undergo security checks to prevent phishing attempts and other malicious activities. While we typically review websites promptly, please note that it may take up to 24 hours. Once approved, your website will be accessible through our IPFS gateway.",
        "Consider upgrading to one of our paid plans for immediate deployment without the security check delay."
      ],
      "title": "Free Plan Website Review by Apillon",
      "upgrade": "Upgrade Now"
    },
    "upload": {
      "directory": "Upload folder",
      "dragAndDrop": "Drag & drop (up to 100 files)",
      "files": "Upload files and folders"
    },
    "website": {
      "addFirst": "Add first website",
      "create": "Create website",
      "description": "Website description",
      "domain": "Domain name",
      "edit": "Edit website",
      "infoNew": "",
      "infoEdit": "",
      "name": "Website name",
      "new": "New website",
      "update": "Update website",
      "uuid": "Website UUID"
    },
    "clearAll": "Clear all",
    "clearAllFiles": "Do you want to remove all files?",
    "clearAllWarn": "With this action you will erase all files. To deploy new version to preview, you will have to upload whole website.",
    "deployProd": "Deploy to production",
    "deployStage": "Deploy to staging",
    "deploymentStatus": "Deployment status",
    "ipns": "IPNS",
    "ipnsAddress": "IPNS Address",
    "ipnsLink": "IPNS link",
    "ipnsInfo": "It may take up to 5 minutes for the changes to become visible after the deployment has been completed.",
    "management": "Hosting management",
    "productionEmpty": "Deploy files from staging to production",
    "size": "Size",
    "stagingEmpty": "Upload files and deploy them to staging",
    "web3Hosting": "Web3 hosting",
    "web3HostingEnable": "Enable Web3 hosting to host your website."
  },
  "nft": {
    "create": "Create an NFT",
    "add": "Add NFT",
    "addNfts": "Add NFTs",
    "addAttribute": "Add attribute",
    "chain": {
      "1": "MOONBEAM (Mainnet)",
      "2": "MOONBASE (Testnet)",
      "8": "ASTAR (Substrate)",
      "81": "ASTAR SHIBUYA (Testnet)",
      "592": "ASTAR (Mainnet)",
      "1284": "MOONBEAM (Mainnet)",
      "1287": "MOONBASE (Testnet)"
    },
    "chainType": {
      "1": "SUBSTRATE",
      "2": "EVM"
    },
    "amount": {
      "title": "Create NFT",
      "content": "Add NFTs one by one or upload them in bulk.",
      "single": "Build one by one",
      "singleContent": "Enter data manually",
      "multiple": "Build multiple NFTs at once",
      "multipleContent": "Use CSV file to upload data in bulk"
    },
    "single": {
      "content": "NFT content",
      "uploadDescription": "Upload image, video, audio, or a 3D-model. Supported file formats: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB.",
      "technicalDetails": "NFT technical details",
      "properties": "Properties",
      "propertiesInfo": "Textual traits that show as text boxes",
      "levels": "Levels",
      "levelsInfo": "Numerical traits that show as progress bar",
      "stats": "Stats",
      "statsInfo": "Numerical traits that show as number boxes",
      "boosts": "Boosts",
      "boostsInfo": "Numerical traits that show as circle progress bars",
      "date": "Date",
      "dateInfo": "Date traits that show as date boxes",
      "unlockableContent": "Unlockable Content",
      "unlockableContentInfo": "Content is only visible to the NFT owner",
      "displaySettings": "Display Settings",
      "showDisplay": "Show on store website",
      "hideDisplay": "Hide on Store website"
    },
    "collection": {
      "addNew": "Add new collection",
      "addNewDesc": "Add info",
      "addNewValue": "Add new value",
      "addLogo": "Select logo",
      "address": "Collection address",
      "baseUri": "Base URI",
      "behavior": "Behavior",
      "chainType": "Chain type",
      "contractAddress": "Contract address",
      "create": "Create collection",
      "createFirst": "Start creating NFTs",
      "createInfo": "",
      "createToDisplay": "Create website to display NFTs with",
      "deploy": "Deploy collection",
      "display": "Display NFT collection",
      "dropStart": "Drop start",
      "edit": "Edit",
      "extension": "[extension]",
      "empty": "Create your first NFT collection",
      "emptyInfo": "Add it to your Web3 project",
      "maxSupply": "Max supply",
      "mint": "Mint",
      "minted": "Minted",
      "mintNfts": "Mint NFTs",
      "dropPrice": "Mint price",
      "name": "Collection name",
      "nestMint": "Nestable Mint",
      "new": "New NFT collection",
      "numOfData": "Number of data",
      "dropReserve": "Reserved",
      "revoke": "Burn",
      "symbol": "Symbol",
      "title": "Collection title",
      "transfer": "Transfer ownership",
      "upload": "Deploy NFT collection",
      "uploadData": "Compose NFT",
      "uploadImages": "Load images",
      "uploadLogo": "Upload",
      "uploadMetadata": "Store NFT metadata",
      "uploadYourFirst": "Upload your first NFTs and start building your collection.",
      "uuid": "Collection UUID",
      "view": "Or, display them on your existing website",
      "environment": "Chose environment",
      "environmentContent": "Deploy on Testnet to test the template before launching it in production on Mainnet.",
      "enterData": "Enter collection data",
      "data": "Collection data",
      "setBaseUri": "Set base URI",
      "setBehavior": "Set collection behavior",
      "preview": "Preview your collection",
      "previewTab": "Collection preview",
      "previewInfo": "This is the preview of your collection. After a successful deployment, you will be able to start adding NFTs.",
      "deployInfo": "Deploy on Testnet to test the template before launching it in production in Mainnet.",
      "headline": "How does it work?",
      "info": "Launch your end-to-end decentralized NFT collection with one click. Create NFTs, deploy smart contract and host the collection website on Web3.",
      "burn": {
        "title": "Burn token",
        "info": "Are you sure, you want to burn your token?"
      },
      "created": {
        "bucket": "newly created bucket",
        "explorer": "blockchain explorer",
        "goBack": "Go back to NFT Collection",
        "info": "To display your NFTs and mint them, you need a website. \nUse the Apillon NFT website template and host it on a decentralized network.",
        "or": "or see its contents in your",
        "title": "Display your NFTs on the internet",
        "view": "View the transaction on"
      },
      "displayTypes": {
        "string": {
          "label": "String",
          "info": "Textual traits that show as text boxes"
        },
        "date": {
          "label": "Date",
          "info": "Date traits that show as date boxes"
        },
        "number": {
          "label": "Number",
          "info": "Numerical traits that show as number boxes"
        },
        "boost_number": {
          "label": "Boost number",
          "info": "Numerical traits that show as progress bars"
        },
        "boost_percentage": {
          "label": "Boost percentage",
          "info": "Numerical traits that show as circle progress bars"
        }
      },
      "labelInfo": {
        "collectionBaseExtension": "",
        "collectionBaseUri": "Paste the collection metadata base URI here.",
        "collectionChain": "Select the network where your NFTs will be deployed",
        "collectionChainType": "",
        "collectionDropStart": "A date when your NFT collection becomes publicly available for visitors to buy NFTs.",
        "collectionDrop": "With drop, your collection becomes accessible for visitors to buy NFTs from a certain date onwards.",
        "collectionDropAddress": "Drop Withdrawal  Address",
        "collectionMaxSupply": "The specified number serves as a max supply. Once set, you won't be able to add more files than specified to the collection.",
        "collectionDropPrice": "",
        "collectionName": "The name you choose will be the official name of your NFT collection, “name” NFT collection.",
        "collectionDropReserve": "A number of NFT you wish to reserve for yourself before the drop.",
        "collectionRevocable": "Collection owner can destroy NFT(s) at any point in time.",
        "collectionRoyaltiesAddress": "It’s Astar address to receive Withdrawal tokens when tokens are being minted.",
        "collectionRoyaltiesFees": "The % value of royalties you want to collect in the future NFT sales.",
        "collectionSoulbound": "Soulbound NFTs are not tradeable, they cannot leave the wallet they were deposited into.",
        "collectionSupplyLimited": "If limited, please specify the actual number of the NFTs in total supply on the right.",
        "collectionSymbol": "A symbol acts as a token name on the blockchain for this NFT collection. It consists of 3 or 4 letters, in connection to the name of the NFT collection.",
        "collectionType": "",
        "collectionUseGateway": "Collection base URI points to IPFS. If this checkbox is checked, base URI will point to CID on Apillon private gateway, which provide better performance. Otherwise base URI points to: ipfs://[CID], and gateway needs to be handled manually.",
        "collectionLogoSize": "Maximum size: 3MB, Supported formats: JPG, PNG, GIF, SVG. Recommended size: 400 x 400 px.",
        "csvUpload": "Before adding new items to the collection with existing NFTs, please add an id column to the CSV file. This will help maintain data integrity and avoid any conflicts when adding new entries.",
        "nftDisplayType": "Display type is a field indicating how you would like it to be displayed"
      },
      "status": {
        "0": "CREATED",
        "1": "INITIATED",
        "2": "DEPLOYING",
        "3": "DEPLOYED",
        "4": "TRANSFERRED",
        "5": "FAILED"
      },
      "type": {
        "1": "Generic",
        "2": "Nestable"
      }
    },
    "deploy": {
      "collection": "Give it a minute or two while we prepare everything for you.",
      "deployingCollection": "Deploying to blockchain...",
      "creatingCollection": "Creating collection...",
      "deploying": "Deploying your NFTs",
      "metadata": "Uploading metadata",
      "nft": "Deploying NFTs",
      "single": "Create NFT"
    },
    "metadata": {
      "currentStep": "Metadata deploy step",
      "deployTitle": "Metadata deploys",
      "infoCollectionBehavior": "Configure the behavior of your NFT collection. ",
      "infoCollectionName": "Define the name and symbol for your NFT collection.",
      "infoNew": "To ensure permanent access to your NFTs, you need to store their metadata and files on the web. \n\nWould you like to store your NFT metadata in decentralized way?",
      "lastError": "Last error",
      "no": "I already have it online",
      "proceedUpload": "Proceed to upload",
      "title": "Prepare NFT metadata",
      "titleCollectionBehavior": "Behavior",
      "titleCollectionName": "Name your collection",
      "yes": "Yes, proceed",
      "deployStatus": {
        "1": "UPLOADING IMAGES TO IPFS",
        "2": "UPDATING JSONs",
        "3": "METADATA UPLOADED ON IPFS",
        "10": "METADATA SUCCESSFULLY PREPARED"
      }
    },
    "transaction": {
      "chain": "Chain",
      "chainId": "Chain ID",
      "empty": "Your collection has currently no transactions",
      "emptyInfo": "If you just deployed your collection, please wait a minute for the collection to deploy.",
      "hash": "Transaction Hash",
      "link": "Transaction Link",
      "title": "Transactions",
      "status": {
        "0": "REQUESTED",
        "1": "PENDING",
        "2": "CONFIRMED",
        "3": "VERIFIED",
        "4": "FAILED"
      },
      "type": {
        "1": "DEPLOY CONTRACT",
        "2": "TRANSFER CONTRACT OWNERSHIP",
        "3": "MINT NFT",
        "4": "SET COLLECTION BASE URI",
        "5": "BURN NFT",
        "6": "MINT NEST NFT"
      }
    },
    "upload": {
      "addNft": "Add NFT",
      "attributes": "Metadata attributes",
      "csvConfirm": "Confirm CSV data",
      "csvConfirmAttributes": "Confirm attributes",
      "csvFile": "Select CSV file",
      "csvFileDesc": "Viverra vel nisl urna erat eu lectus lacinia vulputate. Malesuada facilisi morbi.",
      "deploy": "Deploy",
      "deployError": "There is a problem with deploy.",
      "downloadCsv": "Download CSV example",
      "differentFile": "Upload different file",
      "dragAndDrop": "Drag & drop or click to upload.",
      "images": "Upload files",
      "imagesConfirm": "Confirm & upload images",
      "imagesDesc": "",
      "infoFile": "This is the first step to your NFT collection. The file names in the CSV record should match the names of NFT files you upload in the next step.",
      "infoImages": "Now, upload NFT files for your NFT collection, images or other media. File names should match those in the CSV metadata record from the previous step.",
      "logo": "Upload logo",
      "preview": "Preview upload",
      "previewConfirm": "Looks good, proceed",
      "previewNfts": "Preview your NFTs",
      "selectAttributes": "Select attributes",
      "takeMeBack": "Take me back",
      "titleCsv": "Upload metadata in CSV file",
      "titleImage": "Upload NFT files"
    },
    "validation": {
      "csvMissingAttributes": "Are you sure you want to continue with no attributes?",
      "csvMissingData": "Missing metadata, num of row must be same as maxSupply",
      "csvRequiredColumns": "Missing metadata columns, required columns:",
      "fileInvalid": "Invalid file format. Please upload a valid CSV file with columns \"name\", \"description\", and \"image\".",
      "imagesMissing": "Missing images:",
      "imagesInvalid": "Invalid image names. Example: ",
      "selectAmount": "Please select how many NFTs would you like to create."
    },
    "openBucket": "Go to storage",
    "transactionType": "Transaction Type"
  },
  "profile": {
    "userRole": {
      "ADMIN": "Admin",
      "SUPPORT": "Support",
      "ANALYTIC": "Analytic",
      "PROJECT_OWNER": "Project owner",
      "PROJECT_ADMIN": "Project admin",
      "PROJECT_USER": "Project user",
      "USER": "User"
    },
    "discord": {
      "connect": "Link with Discord",
      "connected": "Discord connected",
      "disconnect": "Discord disconnect",
      "disconnected": "You have successfully disconnected your Discord account",
      "infoConnected": "You have connected your Apillon account to our Discord server and now you can participate in community discussions and product governance.",
      "infoDisconnected": "Link your Apillon account to our Discord server and participate in community discussions and product governance.",
      "titleConnected": "Discord connected",
      "titleDisconnected": "Connect with Discord"
    },
    "marketing": {
      "btn": "Receive useful data, tips an tricks via email",
      "check": "I want to receive useful data, tips an tricks via email.",
      "info": "Say yes to Apillon emails about product updates, new feature releases, how-to guides and other platform related content. Unsubscribe at anytime.",
      "privacy": "Privacy Policy",
      "subscribed": "Subscribed",
      "title": "Marketing"
    },
    "password": {
      "btn": "Send e-mail",
      "change": "Change password",
      "info": "In case you need to reset your password, an email will be sent to the email address you saved in the upper section  \"Account Information\".",
      "title": "Password reset"
    },
    "2fa": "Two-factor authentication",
    "2faText": "Add an extra layer of security to your account. To sign in, you'll need to provide a code along with your username and password.",
    "account": "Account",
    "accountInformation": "Account information",
    "billing": "Billing",
    "logout": "Logout",
    "mySettings": "Settings",
    "profile": "Profile",
    "security": "Security",
    "settings": "Settings",
    "setup2fa": "Set up 2FA"
  },
  "project": {
    "delete": "Delete project",
    "deleteRequest": "Send a request to delete project",
    "deleteText": "Submit a request for project deletion. ",
    "id": "Project ID",
    "new": "Add new project",
    "newBucket": "New storage bucket",
    "owner": "Project owner",
    "quotaReached": "Quota has been reached. To create more projects",
    "upgradePlan": " upgrade your current plan",
    "usersAndPermissions": "Project users & permissions",
    "uuid": "Project UUID"
  },
  "referral": {
    "airdrop": {
      "btn": "Have questions? Enter Discord!",
      "content": "As a registered user, you are eligible for a bag of free NCTR. Increase rewards by completing a few tasks below. \nAt the TGE, simply click Claim on the right and collect your NCTR.",
      "reward": "Reward",
      "task": "Task",
      "title": "NCTR Airdrop concluded",
      "type": "Type",
      "welcome": "Welcome to NCTR Airdrop!",
      "subscribe": {
        "btn": "Sign up to Apillon news",
        "content": "Sign up for the Apillon newsletter and don’t miss the next chance to earn NCTR tokens.",
        "headline": "NCTR Airdrop concluded",
        "headlineInfo": "The NCTR Airdrop task phase is now finished.",
        "info": "Receive product and feature updates, how-to guides and other platform-related news. Unsubscribe at any time.",
        "title": "Missed your chance?"
      },
      "tabs": [
        {
          "title": "Refer",
          "content": " and earn NCTR when they register",
          "link": "Refer Apillon to a friend"
        },
        {
          "title": "Learn",
          "content": "Experiment with the Apillon platform (see tasks below) for a bigger NCTR bonus"
        },
        {
          "title": "Build",
          "content": "Create a Web3 project with Apillon services (see tasks below) and get the most NCTR"
        }
      ]
    },
    "banner": {
      "title": "NCTR Airdrop concluded",
      "description": "NCTR Airdrop task phase is now concluded. If you have collected any rewards, visit the Airdrop dashboard and proceed to the token-claiming process: \n1. Visit the Airdrop dashboard. \n2. Submit your tasks for review. \n3. Check the review status. \n4. Save your EVM target wallet to receive NCTR. \n5. Wait for NCTR TGE (tokens will be distributed once TGE is concluded).",
      "btn": "NCTR Airdrop dashboard"
    },
    "info": {
      "airdrop": "Airdrop",
      "astarAddress": "EVM wallet address",
      "collected": "NCTR Earned",
      "connectAstar": "Connect your EVM wallet",
      "connectWallet": "Connect wallet",
      "refreshed": "Refreshed every 5 minutes",
      "receiveTokens": "To receive NCTR tokens, connect your EVM compatible wallet.",
      "seeHow": "See how",
      "status": "Your status",
      "claim": {
        "alreadyClaimed": "You have already claimed your tokens.",
        "blocked": "You are blocked from claiming tokens due to suspicious behavior.",
        "btn": "Submit",
        "content": "Upon task review and completion of TGE, you will be able to claim your NCTR tokens.",
        "contentEnd": "is live.",
        "inReview": "Your tasks are in review",
        "title": "Submit tasks for review",
        "tooltip": "You will be able to claim your bonus after TGE.",
        "tooltipDisabled": "Tasks are already in review"
      },
      "statuses": {
        "0": "Register to Apillon platform",
        "1": "Connect your EVM wallet",
        "2": "Tasks successfully reviewed",
        "3": "Wait for TGE and claim NCTR"
      }
    },
    "menu": {
      "airdrop": "Airdrop",
      "referral": "Referral"
    },
    "referres": {
      "active": "Active",
      "disclaimer": "Disclaimer: To prevent users from duplicating accounts and referring to themselves, Apillon will measure the activity of referred accounts and reward them accordingly. It will also monitor potential bot activity or users creating multiple accounts. Accounts detected as either bot or self-referral will be excluded from receiving NCTR in the Airdrop.",
      "header": "Your referees",
      "info": "See who registered to Apillon using your referral link. \n\nActive users are those who actively use the Apillon platform. Guide your referees through Airdrop Learn and Build tasks to boost their activity.",
      "invite": "Invite other developers to score",
      "link": "Your referral link",
      "linkDesc": "Share the link below with your dev peers and have them register to the Apillon platform. Based on their activity, you will be rewarded in NCTR for each active referee.",
      "name": "Email",
      "github": "GitHub profile",
      "joined": "Joined"
    },
    "shoutout": {
      "title": "Help us with the shoutout",
      "content": "Spread the word about Apillon and its killer features of the platform. Follow us on Twitter,    retweet the posts and earn reward points."
    },
    "title": "Referral program"
  },
  "social": {
    "chat": {
      "about": "About",
      "addNew": "Add new hub",
      "create": "Create hub",
      "createFirst": "Create first hub",
      "date": "Create time",
      "dragAndDrop": "Drag & drop or click to upload.",
      "empty": "A chat application built on top of the Subsocial blockchain 🔗.",
      "emptyInfo": "Grill.chat offers a smooth and simple onboarding and user experience while still leveraging the power of blockchain technology.",
      "name": "Hub name",
      "new": "New hub",
      "select": "Select Hub",
      "settings": "Grill.chat hub config",
      "showSettings": "Show hub settings",
      "spaceId": "Hub ID",
      "tags": "Tags",
      "title": "Hubs",
      "uploadImage": "Upload image",
      "uuid": "Hub UUID"
    },
    "post": {
      "body": "Channel  content",
      "create": "Create channel",
      "createFirst": "Create first channel",
      "date": "Created",
      "manageHubs": "Manage Hubs",
      "new": "New channel",
      "postId": "Channel ID",
      "select": "Select channel",
      "settings": "Grill.chat channel config",
      "tags": "Tags",
      "title": "Channel title",
      "uuid": "Channel UUID"
    },
    "settings": {
      "autofocus": "Enable input autofocus",
      "back": "Enable back button",
      "login": "Enable login button",
      "theme": "Dark theme"
    },
    "title": "Social"
  },
  "storage": {
    "bucket": {
      "addNew": "Add new bucket",
      "attachService": "Create a new bucket and get immediate access to Web3 storage.",
      "buckets": "Buckets",
      "description": "Description",
      "delete": "Delete bucket(s)",
      "deleteConfirm": "Are you sure that you want to delete {num} selected bucket(s)?",
      "destroyed": "Deleted buckets",
      "destroyedBuckets": "Destroyed buckets",
      "edit": "Edit bucket",
      "infoEdit": "Edit name and description for the bucket so you can easily recognise it.",
      "infoNew": "Enter the desired name and description for the bucket so you can easily recognise it.",
      "management": "Bucket management",
      "name": "Bucket name",
      "new": "New bucket",
      "nft": "Storage bucket",
      "noActiveService": "You need a storage bucket before you can start storing files. ",
      "nothingHere": "Nothing here",
      "storage": "Storage bucket",
      "type": "Bucket type",
      "update": "Update bucket",
      "uuid": "Bucket UUID",
      "quotaReached": "Quota has been reached."
    },
    "delete": {
      "bucket": "Delete bucket",
      "bucketItems": "Delete these items?",
      "deleteConfirm": "Are you sure that you want to delete {num} selected item(s)?",
      "item": "Delete selected item",
      "items": "Delete selected items",
      "selectedBuckets": "Delete selected buckets",
      "selectedFiles": "Delete selected files and directories"
    },
    "directory": {
      "create": "Create folder",
      "createNew": "Create new folder",
      "delete": "Delete folder",
      "deleteConfirm": "Are you sure that you want to delete {num} selected folders?"
    },
    "download": {
      "bucketItems": "Download selected items?",
      "item": "Download selected item",
      "items": "Download selected items"
    },
    "ipfs": {
      "generateLink": "Generate IPFS/IPNS link",
      "hotToGenerateLink": "How to generate link?",
      "ipfsInfo": "Used to access content via CIDs",
      "ipfsLink": "IPFS link",
      "ipfsLinkInfo": "Link, where requested content can be accessed",
      "ipns": "IPNS Gateway",
      "ipnsInfo": "Used to access content via IPNS name",
      "project": "Project unique identifier",
      "secretInfo": "Secret for project, used to generate a token to access the content via the IPFS gateway",
      "selectType": "Select type (CID/IPNS)",
      "subdomain": "Subdomain Gateway",
      "subdomainInfo": "If specified, content on ipfs can be access as subdomain.",
      "title": "IPFS Gateway",
      "titleInfo": "IPFS Gateway info",
      "enterCid": "Enter CID or IPNS"
    },
    "ipns": {
      "create": "Create new IPNS",
      "createFirst": "Create your first IPNS",
      "delete": "Are you sure that you want to delete IPNS?",
      "description": "Description",
      "disabled": "IPNS is disabled. This item needs a CID.",
      "edit": "Edit IPNS",
      "infoNew": "Create new IPNS record",
      "infoEdit": "Update IPNS record",
      "ipnsName": "IPNS name",
      "link": "IPNS link",
      "name": "Name",
      "new": "New IPNS",
      "noUploadedFiles": "Please, upload some files first",
      "orCreateNew": "or create new IPNS",
      "publish": "Publish to IPNS",
      "selectIpns": "Select IPNS",
      "title": "IPNS",
      "update": "Update IPNS",
      "uuid": "IPNS UUID"
    },
    "file": {
      "status": {
        "1": "Signed URL for upload generated",
        "2": "Uploaded to S3",
        "3": "Uploaded to IPFS",
        "4": "Upload completed - File pinned to CRUST",
        "5": "Upload completed",
        "100": "Error while uploading to S3",
        "101": "Error while pinning to CRUST",
        "102": "Error: file does not exists on S3",
        "103": "Error: bucket is full",
        "104": "Error: file upload request does not exists",
        "105": "Error: failed creating file object",
        "106": "Error: not enough space",
        "107": "Error: max storage reached"
      },
      "confirmUpload": "Confirm your upload",
      "create": "Create file",
      "delete": "Delete file(s)",
      "deleteConfirm": "Are you sure that you want to delete {num} selected file(s)?",
      "deletedFiles": "Deleted buckets",
      "downloadLink": "Download link",
      "dragAndDrop": "Drag & drop or click to upload files",
      "files": "({files} files)",
      "filesUploading": "({uploading} of {files})",
      "nothingHere": "Nothing here",
      "pinningToCrust": "This file is being pinned to Crust Network. While uploading, the file is only visible in the \"All Files\" tab.",
      "refresh": "Refresh files",
      "retry": "Retry upload",
      "search": "Search files",
      "stillUploading": "This file is being pinned to Crust Network. When it’s done, you will be able to see file’s IPFS details.",
      "upload": "Upload files and folders",
      "uploading": "Uploading",
      "uploadMore": "Add more files",
      "uploadNow": "Upload now"
    },
    "session": {
      "status": {
        "1": "CREATED",
        "2": "IN PROGRESS",
        "3": "FINISHED"
      }
    },
    "type": {
      "1": "Storage",
      "2": "Hosting",
      "3": "NFT metadata"
    },
    "contentType": "Content type",
    "downloadLink": "Download link",
    "destroy": "Destroy",
    "edit": "Edit",
    "expiration": "Expired on blockchain",
    "fileCid": "File CID",
    "fileName": "File name",
    "files": "Files",
    "filesAll": "Upload sessions",
    "fileSize": "File size",
    "fileStatusName": "File status",
    "goToRootDirectory": "Go to root folder",
    "history": "History",
    "numOfFileUploadRequests": "Number of file upload requests",
    "numOfUploadedFiles": "Number of uploaded files",
    "refresh": "Refresh",
    "replicas": "Replicas",
    "selectFiles": "Select files",
    "sessionStatus": "Session status",
    "sessionUuid": "Session UUID",
    "snapshots": "Snapshots",
    "stats": "Stats",
    "status": "Status",
    "traffic": "30d traffic",
    "trash": "Archive",
    "uploadFiles": "Upload files",
    "used": "Storage usage",
    "usage": "{used} of {max} used",
    "visits": "30d visits",
    "yourFiles": "Your files",
    "webhook": "Webhook",
    "wrapFiles": "Wrap files",
    "wrapFilesDescription": "If you want to wrap files to a directory please type the name of the directory below. If you don't want to do it just skip this process.",
    "wrapToDirectory": "Wrap to directory"
  },
  "validation": {
    "alreadyOnList": "{name} is already on list",
    "bucketNameRequired": "Please enter bucket name",
    "containsLowercase": "Must include a lowercase character",
    "containsNumber": "Must include a number character",
    "containsSpecial": "Must include a special character",
    "containsUppercase": "Must include an uppercase character",
    "captchaRequired": "Captcha challenge required!",
    "cardHolder": "Please enter valid name",
    "cardHolderRequired": "Please enter your name",
    "chatNameRequired": "Please enter Hub name",
    "collectionBaseUri": "Base URI is not valid",
    "collectionBaseUriRequired": "Please enter Base URI",
    "collectionBaseExtensionRequired": "Please enter Base Extension",
    "collectionChainRequired": "Please select Chain",
    "collectionChainTypeRequired": "Please select Chain type",
    "collectionDropStart": "Drop start is not a valid date or has already passed by",
    "collectionMaxSupplyReached": "Enter lower value, max supply is {max}",
    "collectionMaxSupplyRequired": "Please enter Max supply",
    "collectionDropPrice": "Please enter a valid Mint price",
    "collectionDropPriceRequired": "Please enter Mint price",
    "collectionNameRequired": "Please enter Collection name",
    "collectionDropReserve": "Number of reserved NFTs can be equal or lower than max supply.",
    "collectionRoyaltiesAddress": "Please enter a valid Wallet address",
    "collectionRoyaltiesAddressRequired": "Please enter Royalties address",
    "collectionRoyaltiesFees": "Royalty fee must be a number between 0 and 100",
    "collectionRoyaltiesFeesRequired": "Please enter Royalties fees",
    "collectionLogoRequired": "Please select Collection logo",
    "collectionCoverImageRequired": "Please select Collection cover image",
    "collectionSymbolRequired": "Please enter Collection symbol",
    "collectionTypeRequired": "Please select Collection type",
    "creditCard": "Credit card validation error",
    "creditCardRequired": "Please enter credit card number",
    "cvv": "Wrong CVV",
    "cvvRequired": "Please enter CVV",
    "descriptionTooLong": "Text is too long (max 255 characters)",
    "email": "Email address is not valid",
    "emailRequired": "Typing in your email would definitely hit the spot :)",
    "expirationDate": "Date is expired",
    "expirationDateRequired": "Please enter expiration date",
    "fileNoData": "The file is empty or has no data",
    "fileTypeNotAllow": "File \"{name}\" can't be uploaded here. Please use hosting service.",
    "fileTypeNotCsv": "File must be of type CSV",
    "folderNameRequired": "Please enter folder name",
    "idRequired": "ID is required",
    "ipfsCidRequired": "Please enter CID or IPNS",
    "ipfsTypeRequired": "Please select type",
    "ipnsNameRequired": "Please enter IPNS name",
    "ipnsRequired": "Please select IPNS",
    "naturalNumber": "Please enter a positive number",
    "nft": "Please select an NFT",
    "nftBucketRequired": "Please select a bucket",
    "nftBurnTokenIdRequired": "Please enter token ID",
    "nftMetadata": "Please insert missing data, fields ID, image, name and description are required!",
    "nftMintAddressRequired": "Please enter your wallet address for minting",
    "nftMintCollectionUuidRequired": "Please select collection",
    "nftMintParentNftIdRequired": "Please enter Parent NFT ID",
    "nftMintQuantity": "Please enter a lower number. You can only mint those tokens that you have reserved for yourself.",
    "nftMintQuantityRequired": "Please enter mint Quantity",
    "nftSetBaseUriRequired": "Please enter base URI",
    "nftTransferAddressRequired": "Please enter wallet address",
    "nftIdRequired": "Please enter ID of NFT",
    "nftIdDuplicate": "Please enter different ID",
    "nftName": "Please enter name of NFT",
    "nftCollection": "Please select a Collection",
    "nftRoyalties": "Please enter royalties",
    "nftCopies": "Please enter number of NFT copies",
    "nftDescription": "Please enter NFT's description",
    "notEnoughSpaceInStorage": "File \"{name}\" is too big. To proceed, please upgrade your subscription plan.",
    "notImage": "{name} is not an image",
    "passwordMinLength": "Password must contain at least 12 characters.",
    "passwordReenterSame": "Password is not same as re-entered password!",
    "passwordReenterRequired": "Re-entered password is required",
    "passwordRequired": "Please enter your password",
    "postalCode": "Wrong postal code",
    "postalCodeRequired": "Please enter postal code",
    "postBodyRequired": "Please write content",
    "postTitleRequired": "Please write a title",
    "streetRequired": "Please enter your street",
    "houseNumberRequired": "Please enter your house number",
    "projectNameRequired": "Please enter project name",
    "phone": "Phone validation error",
    "role": "Selected role is invalid",
    "roleRequired": "Please select role",
    "terms": "Please accept the terms",
    "tooManyImages": "Too many images. You can upload only {num} images.",
    "country": "Please select the country",
    "webhookAuthTypeRequired": "Please select Auth type",
    "webhookPasswordRequired": "Please enter password",
    "webhookRequired": "Please enter Webhook URL",
    "webhookUsernameRequired": "Please enter username",
    "webhookTokenRequired": "Please enter token",
    "websiteNameRequired": "Please enter Website name",
    "websiteDomainUrl": "Domain name is not a valid URL",
    "apiKey": {
      "nameRequired": "API key name is required",
      "rolesRequired": "Please select at least one permission"
    },
    "contract": {
      "addressRequired": "Please enter NFT collection address",
      "bucketUuidRequired": "Please select Bucket",
      "chainRpcUrlRequired": "Please enter RPC URL of your NFT Collection",
      "cidRequired": "Please enter CID",
      "depositAmountRequired": "Please enter amount",
      "depositAmountTooLow": "Please enter a higher amount (min. 0.01)",
      "fileIsApp": "Type of file \"{name}\" is is not supported, please use another file.",
      "fileTooBig": "File \"{name}\" is, max file size is 64kb.",
      "fileRequired": "Please upload file",
      "nameRequired": "Please enter name",
      "nftIdRequired": "Please enter NFT ID"
    },
    "hosting": {
      "missingHtml": "You have to upload at least one html file, to deploy website!",
      "missingIndex": "Please upload index.html file"
    }
  },
  "w3Warn": {
    "bucket": {
      "new": "Each file hosting that passes through Crust's pinning and replication service is paid up front for a minimum period of 6 months. Apillon has no control over amending that period, so keep in mind that all files you deploy to Apillon storage buckets will remain accessible for that period of time.",
      "delete": "All items stored in this bucket will be permanently deleted after 3 months. Until then you can find them in the deleted items tab and you can restore them anytime before.",
      "destroyed": ""
    },
    "contract": {
      "_new": "New Phat contract"
    },
    "file": {
      "delete": "This item will be permanently deleted after 3 months. Until then you can find them in the deleted items tab and you can restore them anytime before."
    },
    "folder": {
      "delete": "All items stored in this folder will be permanently deleted after 3 months. Until then you can find them in the deleted items tab and you can restore them anytime before."
    },
    "hosting": {
      "upload": "With web3 hosting you can only hosting static, client site rendered pages. Server side rendering is not supported.",
      "deploy": "Please be advised that the deployment may take up to 5 minutes to complete."
    },
    "ipfs": {
      "gateway": ""
    },
    "nft": {
      "collection": "You are about to deploy a NFT collection to the blockchain. If you confirm this step, your NFT collection will irreversibly be deployed.",
      "new": "Your NFT collection is now configured. If you proceed with this step, the deployment of NFT collection on blockchain will start. Once deployed, the NFTs will be live on the blockchain and ready to mingle with the world."
    },
    "social": {
      "info": "Subsocial is a set of Substrate pallets that allows anyone to launch their own decentralized social network or community, or add social features to an existing application. Subsocial is not a decentralized social network, like Twitter or Facebook, but rather Subsocial is a platform for building social networks.",
      "grillChat": " is a mobile-friendly, anonymous chat application powered by Subsocial, allowing anyone to communicate on-chain, without needing a wallet or tokens!"
    }
  }
}
